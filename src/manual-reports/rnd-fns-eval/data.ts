import { APP_TYPES } from '../../parseApps'
import { AppFunction, InAppFunction, MisMatchedReason as r, TodoAppFunction } from './index'

// eslint-disable-next-line no-unused-vars
const note = `
  Here are selected 110 functions. Out of 500 randomly selected functions.
  500 random were from 10 cordova apps - all that are not in 'f-droid' section.

  However, selected 110 contain minified libraries, which kept comments. So, it
  is hard to pick functions from those, and they are kept separately in the
  minified variable.
`

// todo: delete this var after content of todo var is complete
const template = {
  matchedFns: [
    { name: '', version: '', file: '', index: 0 },
    { name: '', version: '', file: '', index: 0 },
    { name: '', version: '', file: '', index: 0 },
  ],
  misMatchedFns: [
    { name: '', version: '', file: '', index: 0, reason: r },
    { name: '', version: '', file: '', index: 0, reason: r },
    { name: '', version: '', file: '', index: 0, reason: r },
  ],
}
// todo: delete this var after content of todo var is complete
const headers = [
  /* 1st group */
  /* 2nd group */
  /* 3rd group */
  /* 4th group */
  /* 5th group */
  /* 6th group */
  /* 7th group */
  /* 8th group */
  /* 9th group */
  /* 10th group */
  /* 11th group */
]

const todo: InAppFunction[] = [
  /* 1st group */
  /* 2nd group */
  /* 3rd group */
  /* 4th group */
  {
    comments: ['jquery@2.2.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 3474,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:handler',
      loc: { start: { line: 68449, column: 16 }, end: { line: 68451, column: 3 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Member[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[event]] >>> ex:Identifier[simulate]](ex:Identifier[fix], ex:Member[ex:Identifier[event] >>> ex:Identifier[target]], ex:Call[ex:Member[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[event]] >>> ex:Identifier[fix]](ex:Identifier[event])])]',
        'pr:Identifier[event]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 564,
      type: 'fn',
      name: '[anonymous]:>>:Jc',
      loc: { start: { line: 31, column: 261 }, end: { line: 31, column: 327 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[c] = ex:Member[ex:Identifier[wb] >c> ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[toLowerCase]]()]]]',
        'pr:Identifier[a]',
        'pr:Identifier[b]',
        'st:Return[ex:Logical[ex:Logical[ex:Identifier[c] && ex:Member[ex:Identifier[Kc] >c> ex:Call[ex:Identifier[pa](ex:Identifier[b])]]] && ex:Identifier[c]]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 3782,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:link:>>:[anonymous]',
      loc: { start: { line: 26649, column: 21 }, end: { line: 26652, column: 7 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Member[ex:Identifier[whensExpFns] >c> ex:Identifier[key]] = ex:Call[ex:Identifier[$interpolate](ex:Call[ex:Member[ex:Identifier[expression] >>> ex:Identifier[replace]](ex:Identifier[BRACE], ex:Identifier[braceReplacement])])]]',
        'pr:Identifier[expression]',
        'pr:Identifier[key]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 2755,
      type: 'fn',
      name: '[anonymous]:>>:dateFilter:>>:jsonStringToDate',
      loc: { start: { line: 32131, column: 2 }, end: { line: 32153, column: 3 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[dateSetter] = ex:Conditional[ex:Member[ex:Identifier[match] >c> lt:Numeric] ? ex:Member[ex:Identifier[date] >>> ex:Identifier[setUTCFullYear]] : ex:Member[ex:Identifier[date] >>> ex:Identifier[setFullYear]]]]',
        'de:Variable[pr:Identifier[date] = ex:New[ex:Identifier[Date](lt:Numeric)]]',
        'de:Variable[pr:Identifier[h] = ex:Binary[ex:Call[ex:Identifier[toInt](ex:Logical[ex:Member[ex:Identifier[match] >c> lt:Numeric] || lt:Numeric])] - ex:Identifier[tzHour]]]',
        'de:Variable[pr:Identifier[m] = ex:Binary[ex:Call[ex:Identifier[toInt](ex:Logical[ex:Member[ex:Identifier[match] >c> lt:Numeric] || lt:Numeric])] - ex:Identifier[tzMin]]]',
        'de:Variable[pr:Identifier[match]]',
        'de:Variable[pr:Identifier[ms] = ex:Call[ex:Member[ex:Identifier[Math] >>> ex:Identifier[round]](ex:Binary[ex:Call[ex:Identifier[parseFloat](ex:Binary[lt:String + ex:Logical[ex:Member[ex:Identifier[match] >c> lt:Numeric] || lt:Numeric]])] * lt:Numeric])]]',
        'de:Variable[pr:Identifier[s] = ex:Call[ex:Identifier[toInt](ex:Logical[ex:Member[ex:Identifier[match] >c> lt:Numeric] || lt:Numeric])]]',
        'de:Variable[pr:Identifier[timeSetter] = ex:Conditional[ex:Member[ex:Identifier[match] >c> lt:Numeric] ? ex:Member[ex:Identifier[date] >>> ex:Identifier[setUTCHours]] : ex:Member[ex:Identifier[date] >>> ex:Identifier[setHours]]]]',
        'de:Variable[pr:Identifier[tzHour] = lt:Numeric]',
        'de:Variable[pr:Identifier[tzMin] = lt:Numeric]',
        'ex:Assignment[pr:Identifier[tzHour] = ex:Call[ex:Identifier[toInt](ex:Binary[ex:Member[ex:Identifier[match] >c> lt:Numeric] + ex:Member[ex:Identifier[match] >c> lt:Numeric]])]]',
        'ex:Assignment[pr:Identifier[tzMin] = ex:Call[ex:Identifier[toInt](ex:Binary[ex:Member[ex:Identifier[match] >c> lt:Numeric] + ex:Member[ex:Identifier[match] >c> lt:Numeric]])]]',
        'ex:Call[ex:Member[ex:Identifier[dateSetter] >>> ex:Identifier[call]](ex:Identifier[date], ex:Call[ex:Identifier[toInt](ex:Member[ex:Identifier[match] >c> lt:Numeric])], ex:Binary[ex:Call[ex:Identifier[toInt](ex:Member[ex:Identifier[match] >c> lt:Numeric])] - lt:Numeric], ex:Call[ex:Identifier[toInt](ex:Member[ex:Identifier[match] >c> lt:Numeric])])]',
        'ex:Call[ex:Member[ex:Identifier[timeSetter] >>> ex:Identifier[call]](ex:Identifier[date], ex:Identifier[h], ex:Identifier[m], ex:Identifier[s], ex:Identifier[ms])]',
        'pr:Identifier[string]',
        'st:If[ex:Assignment[pr:Identifier[match] = ex:Call[ex:Member[ex:Identifier[string] >>> ex:Identifier[match]](ex:Identifier[R_ISO8601_STR])]]]',
        'st:If[ex:Member[ex:Identifier[match] >c> lt:Numeric]]',
        'st:Return[ex:Identifier[date]]',
        'st:Return[ex:Identifier[string]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 589,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:$$runValidators:>>:processParseErrors',
      loc: { start: { line: 38204, column: 4 }, end: { line: 38222, column: 5 } },
      fnStatementTypes: ['t_st:IfStatement', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[errorKey] = ex:Logical[ex:Member[ex:Identifier[ctrl] >>> ex:Identifier[$$parserName]] || lt:String]]',
        'ex:Call[ex:Identifier[forEach](ex:Member[ex:Identifier[ctrl] >>> ex:Identifier[$asyncValidators]], ex:Function[anonymous])]',
        'ex:Call[ex:Identifier[forEach](ex:Member[ex:Identifier[ctrl] >>> ex:Identifier[$validators]], ex:Function[anonymous])]',
        'ex:Call[ex:Identifier[setValidity](ex:Identifier[errorKey], ex:Identifier[parserValid])]',
        'ex:Call[ex:Identifier[setValidity](ex:Identifier[errorKey], lt:Null)]',
        'st:Else',
        'st:If[ex:Binary[ex:Identifier[parserValid] === ex:Identifier[undefined]]]',
        'st:If[ex:Unary[! ex:Identifier[parserValid]]]',
        'st:Return[ex:Identifier[parserValid]]',
        'st:Return[lt:Boolean]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.aq_com.az',
      app: 'com.atv.freeanemia-1-2015_04_06.apk',
    },
    file: { path: 'body/0002', location: 'body', id: '0002' },
    signature: {
      index: 324,
      type: 'fn',
      name: '[anonymous]:>>:Fb',
      loc: { start: { line: 3, column: 23565 }, end: { line: 3, column: 23832 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[b] = ex:Identifier[y]]',
        'de:Variable[pr:Identifier[c] = ex:Member[ex:Identifier[Db] >c> ex:Identifier[a]]]',
        'pr:Identifier[a]',
        'st:Return[ex:Sequence[ex:Logical[ex:Identifier[c] || ex:Sequence[ex:Assignment[pr:Identifier[c] = ex:Call[ex:Identifier[Eb](ex:Identifier[a], ex:Identifier[b])]], ex:Logical[ex:Logical[ex:Binary[lt:String !== ex:Identifier[c]] && ex:Identifier[c]] || ex:Sequence[ex:Assignment[pr:Identifier[Cb] = ex:Call[ex:Member[ex:Logical[ex:Identifier[Cb] || ex:Call[ex:Identifier[m](lt:String)]] >>> ex:Identifier[appendTo]](ex:Member[ex:Identifier[b] >>> ex:Identifier[documentElement]])]], ex:Assignment[pr:Identifier[b] = ex:Member[ex:Logical[ex:Member[ex:Member[ex:Identifier[Cb] >c> lt:Numeric] >>> ex:Identifier[contentWindow]] || ex:Member[ex:Member[ex:Identifier[Cb] >c> lt:Numeric] >>> ex:Identifier[contentDocument]]] >>> ex:Identifier[document]]], ex:Call[ex:Member[ex:Identifier[b] >>> ex:Identifier[write]]()], ex:Call[ex:Member[ex:Identifier[b] >>> ex:Identifier[close]]()], ex:Assignment[pr:Identifier[c] = ex:Call[ex:Identifier[Eb](ex:Identifier[a], ex:Identifier[b])]], ex:Call[ex:Member[ex:Identifier[Cb] >>> ex:Identifier[detach]]()]]], ex:Assignment[pr:Member[ex:Identifier[Db] >c> ex:Identifier[a]] = ex:Identifier[c]]]], ex:Identifier[c]]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 1401,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:ngBindCompile',
      loc: { start: { line: 35458, column: 13 }, end: { line: 35467, column: 5 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Member[ex:Identifier[$compile] >>> ex:Identifier[$$addBindingClass]](ex:Identifier[templateElement])]',
        'pr:Identifier[templateElement]',
        'st:Return[ex:Function[ex:Identifier[ngBindLink]]]',
      ],
    },
  },
  {
    comments: ['moment@2.8.3'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0011', location: 'body', id: '0011' },
    signature: {
      index: 34,
      type: 'fn',
      name: '[anonymous]:>>:createAdder',
      loc: { start: { line: 536, column: 4 }, end: { line: 550, column: 5 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[direction]',
        'pr:Identifier[name]',
        'st:Return[ex:Function[anonymous]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.4'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 227,
      type: 'fn',
      name: '[anonymous]:>>:append',
      loc: { start: { line: 3, column: 14884 }, end: { line: 3, column: 15036 } },
      fnStatementTypes: ['t_st:ReturnStatement'],
      fnStatementTokens: [
        'st:Return[ex:Call[ex:Member[ex:This >>> ex:Identifier[domManip]](ex:Identifier[arguments], ex:Function[anonymous])]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 213,
      type: 'fn',
      name: '[anonymous]:>>:ab',
      loc: { start: { line: 3, column: 4854 }, end: { line: 3, column: 4877 } },
      fnStatementTypes: ['t_st:ReturnStatement'],
      fnStatementTokens: ['st:Return[ex:Unary[! lt:Numeric]]'],
    },
  },

  /* 5th group */
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 194,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:link:>>:q',
      loc: { start: { line: 239, column: 153 }, end: { line: 244, column: 145 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:IfStatement',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Function[ex:Identifier[h]]',
        'de:Function[ex:Identifier[k]]',
        'de:Function[ex:Identifier[l]]',
        'de:Function[ex:Identifier[m]]',
        'de:Function[ex:Identifier[q]]',
        'de:Variable[pr:Identifier[A] = ex:Logical[ex:Member[ex:Identifier[v] >c> lt:Numeric] || ex:Member[ex:Identifier[v] >c> lt:Numeric]]]',
        'de:Variable[pr:Identifier[C] = ex:Call[ex:Identifier[c](ex:Logical[ex:Member[ex:Identifier[v] >c> lt:Numeric] || ex:Member[ex:Identifier[v] >c> lt:Numeric]])]]',
        'de:Variable[pr:Identifier[D] = ex:Logical[ex:Call[ex:Member[lt:RegExp >>> ex:Identifier[test]](ex:Member[ex:Identifier[v] >c> lt:Numeric])] && ex:Member[ex:Identifier[v] >c> lt:Numeric]]]',
        'de:Variable[pr:Identifier[F] = ex:Member[ex:Identifier[v] >c> lt:Numeric]]',
        'de:Variable[pr:Identifier[G] = ex:Conditional[ex:Member[ex:Identifier[v] >c> lt:Numeric] ? ex:Call[ex:Identifier[c](ex:Member[ex:Identifier[v] >c> lt:Numeric])] : lt:Null]]',
        'de:Variable[pr:Identifier[I] = ex:Call[ex:Identifier[c](ex:Conditional[ex:Member[ex:Identifier[v] >c> lt:Numeric] ? ex:Member[ex:Identifier[v] >c> lt:Numeric] : ex:Identifier[A]])]]',
        'de:Variable[pr:Identifier[M] = ex:Call[ex:Identifier[c](ex:Logical[ex:Member[ex:Identifier[v] >c> lt:Numeric] || lt:String])]]',
        'de:Variable[pr:Identifier[N] = ex:Object]',
        'de:Variable[pr:Identifier[P] = ex:Call[ex:Identifier[c](ex:Member[ex:Identifier[v] >c> lt:Numeric])]]',
        'de:Variable[pr:Identifier[R] = ex:Array[ex:Array[ex:Object[ex:Identifier[element] : ex:Identifier[f], ex:Identifier[label] : lt:String]]]]',
        'de:Variable[pr:Identifier[v]]',
        'de:Variable[pr:Identifier[w] = ex:Conditional[ex:Identifier[D] ? ex:Call[ex:Identifier[c](ex:Identifier[D])] : lt:Null]]',
        'ex:Assignment[pr:Member[ex:Identifier[g] >>> ex:Identifier[$render]] = ex:Identifier[q]]',
        'ex:Call[ex:Member[ex:Identifier[e] >>> ex:Identifier[$watchCollection]](ex:Function[anonymous], ex:Identifier[l])]',
        'ex:Call[ex:Member[ex:Identifier[e] >>> ex:Identifier[$watchCollection]](ex:Identifier[P], ex:Identifier[l])]',
        'ex:Call[ex:Member[ex:Identifier[f] >>> ex:Identifier[empty]]()]',
        'ex:Call[ex:Member[ex:Identifier[f] >>> ex:Identifier[on]](lt:String, ex:Function[anonymous])]',
        'ex:Logical[ex:Identifier[n] && ex:Call[ex:Member[ex:Identifier[e] >>> ex:Identifier[$watchCollection]](ex:Function[anonymous], ex:Identifier[l])]]',
        'ex:Logical[ex:Identifier[y] && ex:Sequence[ex:Call[ex:Call[ex:Identifier[a](ex:Identifier[y])](ex:Identifier[e])], ex:Call[ex:Member[ex:Identifier[y] >>> ex:Identifier[removeClass]](lt:String)], ex:Call[ex:Member[ex:Identifier[y] >>> ex:Identifier[remove]]()]]]',
        'pr:Identifier[e]',
        'pr:Identifier[f]',
        'pr:Identifier[g]',
        'st:If[ex:Unary[! ex:Assignment[pr:Identifier[v] = ex:Call[ex:Member[ex:Identifier[s] >>> ex:Identifier[match]](ex:Identifier[d])]]]]',
        'st:Throw[ex:Call[ex:Identifier[Rf](lt:String, ex:Identifier[s], ex:Call[ex:Identifier[sa](ex:Identifier[f])])]]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 724,
      type: 'fn',
      name: '[anonymous]:>>:Nd',
      loc: { start: { line: 126, column: 255 }, end: { line: 127, column: 100 } },
      fnStatementTypes: [
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[a] = lt:RegExp]',
        'de:Variable[pr:Identifier[b] = lt:RegExp]',
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[$get]] = ex:Function[anonymous]]',
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[aHrefSanitizationWhitelist]] = ex:Function[anonymous]]',
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[imgSrcSanitizationWhitelist]] = ex:Function[anonymous]]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 492,
      type: 'fn',
      name: '[anonymous]:>>:hd:>>:[anonymous]:>>:[anonymous]:>>:[anonymous]',
      loc: { start: { line: 147, column: 186 }, end: { line: 147, column: 220 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[a]',
        'pr:Identifier[b]',
        'st:Return[ex:Call[ex:Identifier[f](ex:Member[ex:Identifier[a] >c> ex:Identifier[g]], ex:Member[ex:Identifier[b] >c> ex:Identifier[g]])]]',
      ],
    },
  },
  {
    comments: ['moment@2.9.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0007', location: 'head', id: '0007' },
    signature: {
      index: 102,
      type: 'fn',
      name: '[anonymous]:>>:isDSTShifted',
      loc: { start: { line: 6, column: 24772 }, end: { line: 6, column: 24882 } },
      fnStatementTypes: ['t_st:ReturnStatement'],
      fnStatementTokens: [
        'st:Return[ex:Conditional[ex:Member[ex:This >>> ex:Identifier[_a]] ? ex:Logical[ex:Call[ex:Member[ex:This >>> ex:Identifier[isValid]]()] && ex:Binary[ex:Call[ex:Identifier[y](ex:Member[ex:This >>> ex:Identifier[_a]], ex:Call[ex:Member[ex:Conditional[ex:Member[ex:This >>> ex:Identifier[_isUTC]] ? ex:Call[ex:Member[ex:Identifier[vb] >>> ex:Identifier[utc]](ex:Member[ex:This >>> ex:Identifier[_a]])] : ex:Call[ex:Identifier[vb](ex:Member[ex:This >>> ex:Identifier[_a]])]] >>> ex:Identifier[toArray]]()])] > lt:Numeric]] : ex:Unary[! lt:Numeric]]]',
      ],
    },
  },
  {
    comments: ['jquery@1.9.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'net.jp.apps.noboruhirohara.yakei-102008-2016_05_02.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 3434,
      type: 'fn',
      name: '[anonymous]:>>:filter',
      loc: { start: { line: 4605, column: 10 }, end: { line: 4632, column: 3 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[body]]',
        'de:Variable[pr:Identifier[button] = ex:Member[ex:Identifier[original] >>> ex:Identifier[button]]]',
        'de:Variable[pr:Identifier[doc]]',
        'de:Variable[pr:Identifier[eventDoc]]',
        'de:Variable[pr:Identifier[fromElement] = ex:Member[ex:Identifier[original] >>> ex:Identifier[fromElement]]]',
        'ex:Assignment[pr:Identifier[body] = ex:Member[ex:Identifier[eventDoc] >>> ex:Identifier[body]]]',
        'ex:Assignment[pr:Identifier[doc] = ex:Member[ex:Identifier[eventDoc] >>> ex:Identifier[documentElement]]]',
        'ex:Assignment[pr:Identifier[eventDoc] = ex:Logical[ex:Member[ex:Member[ex:Identifier[event] >>> ex:Identifier[target]] >>> ex:Identifier[ownerDocument]] || ex:Identifier[document]]]',
        'ex:Assignment[pr:Member[ex:Identifier[event] >>> ex:Identifier[pageX]] = ex:Binary[ex:Binary[ex:Member[ex:Identifier[original] >>> ex:Identifier[clientX]] + ex:Logical[ex:Logical[ex:Logical[ex:Identifier[doc] && ex:Member[ex:Identifier[doc] >>> ex:Identifier[scrollLeft]]] || ex:Logical[ex:Identifier[body] && ex:Member[ex:Identifier[body] >>> ex:Identifier[scrollLeft]]]] || lt:Numeric]] - ex:Logical[ex:Logical[ex:Logical[ex:Identifier[doc] && ex:Member[ex:Identifier[doc] >>> ex:Identifier[clientLeft]]] || ex:Logical[ex:Identifier[body] && ex:Member[ex:Identifier[body] >>> ex:Identifier[clientLeft]]]] || lt:Numeric]]]',
        'ex:Assignment[pr:Member[ex:Identifier[event] >>> ex:Identifier[pageY]] = ex:Binary[ex:Binary[ex:Member[ex:Identifier[original] >>> ex:Identifier[clientY]] + ex:Logical[ex:Logical[ex:Logical[ex:Identifier[doc] && ex:Member[ex:Identifier[doc] >>> ex:Identifier[scrollTop]]] || ex:Logical[ex:Identifier[body] && ex:Member[ex:Identifier[body] >>> ex:Identifier[scrollTop]]]] || lt:Numeric]] - ex:Logical[ex:Logical[ex:Logical[ex:Identifier[doc] && ex:Member[ex:Identifier[doc] >>> ex:Identifier[clientTop]]] || ex:Logical[ex:Identifier[body] && ex:Member[ex:Identifier[body] >>> ex:Identifier[clientTop]]]] || lt:Numeric]]]',
        'ex:Assignment[pr:Member[ex:Identifier[event] >>> ex:Identifier[relatedTarget]] = ex:Conditional[ex:Binary[ex:Identifier[fromElement] === ex:Member[ex:Identifier[event] >>> ex:Identifier[target]]] ? ex:Member[ex:Identifier[original] >>> ex:Identifier[toElement]] : ex:Identifier[fromElement]]]',
        'ex:Assignment[pr:Member[ex:Identifier[event] >>> ex:Identifier[which]] = ex:Conditional[ex:Binary[ex:Identifier[button] & lt:Numeric] ? lt:Numeric : ex:Conditional[ex:Binary[ex:Identifier[button] & lt:Numeric] ? lt:Numeric : ex:Conditional[ex:Binary[ex:Identifier[button] & lt:Numeric] ? lt:Numeric : lt:Numeric]]]]',
        'pr:Identifier[event]',
        'pr:Identifier[original]',
        'st:If[ex:Logical[ex:Binary[ex:Member[ex:Identifier[event] >>> ex:Identifier[pageX]] == lt:Null] && ex:Binary[ex:Member[ex:Identifier[original] >>> ex:Identifier[clientX]] != lt:Null]]]',
        'st:If[ex:Logical[ex:Unary[! ex:Member[ex:Identifier[event] >>> ex:Identifier[relatedTarget]]] && ex:Identifier[fromElement]]]',
        'st:If[ex:Logical[ex:Unary[! ex:Member[ex:Identifier[event] >>> ex:Identifier[which]]] && ex:Binary[ex:Identifier[button] !== ex:Identifier[undefined]]]]',
        'st:Return[ex:Identifier[event]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 458,
      type: 'fn',
      name: '[anonymous]:>>:sc:>>:g',
      loc: { start: { line: 4, column: 6185 }, end: { line: 4, column: 6352 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[i]]',
        'pr:Identifier[h]',
        'st:Return[ex:Sequence[ex:Assignment[pr:Member[ex:Identifier[e] >c> ex:Identifier[h]] = ex:Unary[! lt:Numeric]], ex:Call[ex:Member[ex:Identifier[n] >>> ex:Identifier[each]](ex:Logical[ex:Member[ex:Identifier[a] >c> ex:Identifier[h]] || ex:Array], ex:Function[anonymous])], ex:Identifier[i]]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 3199,
      type: 'fn',
      name: '[anonymous]:>>:publishExternalAPI',
      loc: { start: { line: 15672, column: 0 }, end: { line: 15809, column: 1 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:TryStatement',
      ],
      fnStatementTokens: [
        'ex:Assignment[pr:Identifier[angularModule] = ex:Call[ex:Identifier[setupModuleLoader](ex:Identifier[window])]]',
        'ex:Call[ex:Identifier[angularModule](lt:String)]',
        'ex:Call[ex:Identifier[angularModule](lt:String, ex:Array[lt:String], ex:Array[lt:String, ex:Function[ex:Identifier[ngModule]]])]',
        'ex:Call[ex:Identifier[extend](ex:Identifier[angular], ex:Object[lt:String : ex:Identifier[bootstrap], lt:String : ex:Identifier[copy], lt:String : ex:Identifier[extend], lt:String : ex:Identifier[merge], lt:String : ex:Identifier[equals], lt:String : ex:Identifier[jqLite], lt:String : ex:Identifier[forEach], lt:String : ex:Identifier[createInjector], lt:String : ex:Identifier[noop], lt:String : ex:Identifier[bind], lt:String : ex:Identifier[toJson], lt:String : ex:Identifier[fromJson], lt:String : ex:Identifier[identity], lt:String : ex:Identifier[isUndefined], lt:String : ex:Identifier[isDefined], lt:String : ex:Identifier[isString], lt:String : ex:Identifier[isFunction], lt:String : ex:Identifier[isObject], lt:String : ex:Identifier[isNumber], lt:String : ex:Identifier[isElement], lt:String : ex:Identifier[isArray], lt:String : ex:Identifier[version], lt:String : ex:Identifier[isDate], lt:String : ex:Identifier[lowercase], lt:String : ex:Identifier[uppercase], lt:String : ex:Object[ex:Identifier[counter] : lt:Numeric], lt:String : ex:Identifier[getTestability], lt:String : ex:Identifier[minErr], lt:String : ex:Identifier[csp], lt:String : ex:Identifier[reloadWithDebugInfo]])]',
        'ex:Call[ex:Member[ex:Call[ex:Identifier[angularModule](lt:String, ex:Array)] >>> ex:Identifier[provider]](lt:String, ex:Identifier[$LocaleProvider])]',
        'pr:Identifier[angular]',
        'st:Try-Catch[pr:Identifier[e]]',
      ],
    },
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 2866,
      type: 'fn',
      name: '[anonymous]:>>:ensureSafeMemberName',
      loc: { start: { line: 26844, column: 0 }, end: { line: 26853, column: 1 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:ReturnStatement',
      ],
      fnStatementTokens: [
        'pr:Identifier[fullExpression]',
        'pr:Identifier[name]',
        'st:If[ex:Logical[ex:Logical[ex:Logical[ex:Logical[ex:Binary[ex:Identifier[name] === lt:String] || ex:Binary[ex:Identifier[name] === lt:String]] || ex:Binary[ex:Identifier[name] === lt:String]] || ex:Binary[ex:Identifier[name] === lt:String]] || ex:Binary[ex:Identifier[name] === lt:String]]]',
        'st:Return[ex:Identifier[name]]',
        'st:Throw[ex:Call[ex:Identifier[$parseMinErr](lt:String, ex:Binary[lt:String + lt:String], ex:Identifier[fullExpression])]]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 652,
      type: 'fn',
      name: '[anonymous]:>>:Ke:>>:[anonymous]:>>:$watchCollection',
      loc: { start: { line: 118, column: 321 }, end: { line: 120, column: 27 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:FunctionDeclaration',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Function[ex:Identifier[c]]',
        'de:Variable[pr:Identifier[d] = ex:This]',
        'de:Variable[pr:Identifier[e]]',
        'de:Variable[pr:Identifier[f]]',
        'de:Variable[pr:Identifier[h]]',
        'de:Variable[pr:Identifier[k] = ex:Binary[lt:Numeric < ex:Member[ex:Identifier[b] >>> ex:Identifier[length]]]]',
        'de:Variable[pr:Identifier[l] = lt:Numeric]',
        'de:Variable[pr:Identifier[m] = ex:Call[ex:Identifier[g](ex:Identifier[a], ex:Identifier[c])]]',
        'de:Variable[pr:Identifier[n] = ex:Object]',
        'de:Variable[pr:Identifier[p] = ex:Array]',
        'de:Variable[pr:Identifier[q] = ex:Unary[! lt:Numeric]]',
        'de:Variable[pr:Identifier[s] = lt:Numeric]',
        'ex:Assignment[pr:Member[ex:Identifier[c] >>> ex:Identifier[$stateful]] = ex:Unary[! lt:Numeric]]',
        'pr:Identifier[a]',
        'pr:Identifier[b]',
        'st:Return[ex:Call[ex:Member[ex:This >>> ex:Identifier[$watch]](ex:Identifier[m], ex:Function[anonymous])]]',
      ],
    },
  },
  {
    comments: ['jquery@1.9.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'net.jp.apps.noboruhirohara.yakei-102008-2016_05_02.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 3694,
      type: 'fn',
      name: '[anonymous]:>>:isNumeric',
      loc: { start: { line: 1875, column: 12 }, end: { line: 1877, column: 2 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[obj]',
        'st:Return[ex:Logical[ex:Unary[! ex:Call[ex:Identifier[isNaN](ex:Call[ex:Identifier[parseFloat](ex:Identifier[obj])])]] && ex:Call[ex:Identifier[isFinite](ex:Identifier[obj])]]]',
      ],
    },
  },

  /* 6th group */
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 1895,
      type: 'fn',
      name:
        '[anonymous]:>>:$$AnimateAsyncRunFactoryProvider:>>:[anonymous]:>>:waitForTick:>>:[anonymous]',
      loc: { start: { line: 18899, column: 12 }, end: { line: 18904, column: 7 } },
      fnStatementTypes: ['t_st:ExpressionStatement', 't_st:ForStatement'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[i] = lt:Numeric]',
        'ex:Assignment[pr:Identifier[waitQueue] = ex:Array]',
        'ex:Binary[ex:Identifier[i] < ex:Member[ex:Identifier[waitQueue] >>> ex:Identifier[length]]]',
        'ex:Call[ex:Member[ex:Identifier[waitQueue] >c> ex:Identifier[i]]()]',
        'ex:Update[ex:Identifier[i]++]',
        'st:For',
      ],
    },
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 2323,
      type: 'fn',
      name: '[anonymous]:>>:$RootScopeProvider:>>:digestTtl',
      loc: { start: { line: 29512, column: 19 }, end: { line: 29517, column: 3 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:IfStatement', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Identifier[TTL] = ex:Identifier[value]]',
        'pr:Identifier[value]',
        'st:If[ex:Member[ex:Identifier[arguments] >>> ex:Identifier[length]]]',
        'st:Return[ex:Identifier[TTL]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.4'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 274,
      type: 'fn',
      name: '[anonymous]:>>:Deferred:>>:always',
      loc: { start: { line: 2, column: 28089 }, end: { line: 2, column: 28146 } },
      fnStatementTypes: ['t_st:ReturnStatement'],
      fnStatementTokens: [
        'st:Return[ex:Sequence[ex:Call[ex:Member[ex:Call[ex:Member[ex:Identifier[e] >>> ex:Identifier[done]](ex:Identifier[arguments])] >>> ex:Identifier[fail]](ex:Identifier[arguments])], ex:This]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.aq_com.az',
      app: 'com.atv.freeanemia-1-2015_04_06.apk',
    },
    file: { path: 'body/0002', location: 'body', id: '0002' },
    signature: {
      index: 432,
      type: 'fn',
      name: '[anonymous]:>>:offsetParent',
      loc: { start: { line: 4, column: 30098 }, end: { line: 4, column: 30259 } },
      fnStatementTypes: ['t_st:ReturnStatement'],
      fnStatementTokens: [
        'st:Return[ex:Call[ex:Member[ex:This >>> ex:Identifier[map]](ex:Function[anonymous])]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 6934,
      type: 'fn',
      name: '[anonymous]:>>:qFactory:>>:Promise',
      loc: { start: { line: 14521, column: 2 }, end: { line: 14523, column: 3 } },
      fnStatementTypes: ['t_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[$$state]] = ex:Object[ex:Identifier[status] : lt:Numeric]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 57,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:[anonymous]',
      loc: { start: { line: 2, column: 17914 }, end: { line: 2, column: 17976 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ForStatement',
        't_st:ReturnStatement',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[d] = ex:Conditional[ex:Binary[lt:Numeric > ex:Identifier[c]] ? ex:Binary[ex:Identifier[c] + ex:Identifier[b]] : ex:Identifier[c]]]',
        'ex:Binary[ex:Update[++ex:Identifier[d]] < ex:Identifier[b]]',
        'ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[push]](ex:Identifier[d])]',
        'pr:Identifier[a]',
        'pr:Identifier[b]',
        'pr:Identifier[c]',
        'st:For',
        'st:Return[ex:Identifier[a]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 512,
      type: 'fn',
      name: '[anonymous]:>>:setup:>>:[anonymous]',
      loc: { start: { line: 3, column: 13515 }, end: { line: 3, column: 13622 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Sequence[ex:Logical[ex:Logical[ex:Member[ex:This >>> ex:Identifier[_just_changed]] && ex:Unary[! ex:Member[ex:Identifier[a] >>> ex:Identifier[isTrigger]]]] && ex:Assignment[pr:Member[ex:This >>> ex:Identifier[_just_changed]] = ex:Unary[! lt:Numeric]]], ex:Call[ex:Member[ex:Member[ex:Identifier[m] >>> ex:Identifier[event]] >>> ex:Identifier[simulate]](lt:String, ex:This, ex:Identifier[a], ex:Unary[! lt:Numeric])]]',
        'pr:Identifier[a]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 6986,
      type: 'fn',
      name: '[anonymous]:>>:recurse:>>:[anonymous]',
      loc: { start: { line: 13714, column: 30 }, end: { line: 13720, column: 7 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Member[ex:Identifier[args] >>> ex:Identifier[push]](ex:Object[ex:Identifier[key] : ex:Conditional[ex:Binary[ex:Member[ex:Member[ex:Identifier[property] >>> ex:Identifier[key]] >>> ex:Identifier[type]] === ex:Member[ex:Identifier[AST] >>> ex:Identifier[Identifier]]] ? ex:Member[ex:Member[ex:Identifier[property] >>> ex:Identifier[key]] >>> ex:Identifier[name]] : ex:Binary[lt:String + ex:Member[ex:Member[ex:Identifier[property] >>> ex:Identifier[key]] >>> ex:Identifier[value]]]], ex:Identifier[value] : ex:Call[ex:Member[ex:Identifier[self] >>> ex:Identifier[recurse]](ex:Member[ex:Identifier[property] >>> ex:Identifier[value]])]])]',
        'pr:Identifier[property]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 430,
      type: 'fn',
      name: '[anonymous]:>>:fc:>>:[anonymous]:>>:link:>>:l',
      loc: { start: { line: 158, column: 125 }, end: { line: 158, column: 352 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement', 't_st:IfStatement'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[l] = ex:Call[ex:Identifier[d](ex:Identifier[s], ex:Identifier[l])]]',
        'de:Variable[pr:Identifier[l] = ex:Call[ex:Identifier[e](ex:Logical[ex:Identifier[b] || ex:Array])]]',
        'de:Variable[pr:Identifier[l] = ex:Call[ex:Identifier[h](ex:Identifier[l], ex:Unary[- lt:Numeric])]]',
        'de:Variable[pr:Identifier[n] = ex:Call[ex:Identifier[d](ex:Identifier[l], ex:Identifier[s])]]',
        'de:Variable[pr:Identifier[n] = ex:Call[ex:Identifier[h](ex:Identifier[l], lt:Numeric)]]',
        'de:Variable[pr:Identifier[n] = ex:Call[ex:Identifier[h](ex:Identifier[n], lt:Numeric)]]',
        'de:Variable[pr:Identifier[s] = ex:Call[ex:Identifier[e](ex:Identifier[m])]]',
        'ex:Assignment[pr:Identifier[m] = ex:Call[ex:Identifier[qa](ex:Identifier[b])]]',
        'ex:Call[ex:Member[ex:Identifier[k] >>> ex:Identifier[$addClass]](ex:Identifier[n])]',
        'ex:Logical[ex:Logical[ex:Identifier[l] && ex:Member[ex:Identifier[l] >>> ex:Identifier[length]]] && ex:Call[ex:Member[ex:Identifier[c] >>> ex:Identifier[removeClass]](ex:Identifier[g], ex:Identifier[l])]]',
        'ex:Logical[ex:Logical[ex:Identifier[n] && ex:Member[ex:Identifier[n] >>> ex:Identifier[length]]] && ex:Call[ex:Member[ex:Identifier[c] >>> ex:Identifier[addClass]](ex:Identifier[g], ex:Identifier[n])]]',
        'pr:Identifier[b]',
        'st:Else-If[ex:Unary[! ex:Call[ex:Identifier[la](ex:Identifier[b], ex:Identifier[m])]]]',
        'st:If[ex:Logical[ex:Binary[ex:Unary[! lt:Numeric] === ex:Identifier[a]] || ex:Binary[ex:Binary[ex:Member[ex:Identifier[f] >>> ex:Identifier[$index]] % lt:Numeric] === ex:Identifier[a]]]]',
        'st:If[ex:Unary[! ex:Identifier[m]]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'io.shirkan.RavKav-1800000-2017_01_29.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 333,
      type: 'fn',
      name: '[anonymous]:>>:error',
      loc: { start: { line: 249, column: 8 }, end: { line: 251, column: 2 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ThrowStatement'],
      fnStatementTokens: [
        'pr:Identifier[msg]',
        'st:Throw[ex:New[ex:Identifier[Error](ex:Identifier[msg])]]',
      ],
    },
  },

  /* 7th group */
  {
    comments: ['jquery@1.9.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'net.jp.apps.noboruhirohara.yakei-102008-2016_05_02.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 2855,
      type: 'fn',
      name: '[anonymous]:>>:acceptData',
      loc: { start: { line: 3182, column: 13 }, end: { line: 3187, column: 2 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[noData] = ex:Logical[ex:Member[ex:Identifier[elem] >>> ex:Identifier[nodeName]] && ex:Member[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[noData]] >c> ex:Call[ex:Member[ex:Member[ex:Identifier[elem] >>> ex:Identifier[nodeName]] >>> ex:Identifier[toLowerCase]]()]]]]',
        'pr:Identifier[elem]',
        'st:Return[ex:Logical[ex:Unary[! ex:Identifier[noData]] || ex:Logical[ex:Binary[ex:Identifier[noData] !== lt:Boolean] && ex:Binary[ex:Call[ex:Member[ex:Identifier[elem] >>> ex:Identifier[getAttribute]](lt:String)] === ex:Identifier[noData]]]]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 162,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:setDocument:>>:[anonymous]',
      loc: { start: { line: 2, column: 9856 }, end: { line: 2, column: 10160 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Sequence[ex:Assignment[pr:Member[ex:Identifier[a] >>> ex:Identifier[innerHTML]] = lt:String], ex:Logical[ex:Member[ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[querySelectorAll]](lt:String)] >>> ex:Identifier[length]] && ex:Call[ex:Member[ex:Identifier[q] >>> ex:Identifier[push]](ex:Binary[ex:Binary[lt:String + ex:Identifier[M]] + lt:String])]], ex:Logical[ex:Member[ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[querySelectorAll]](lt:String)] >>> ex:Identifier[length]] || ex:Call[ex:Member[ex:Identifier[q] >>> ex:Identifier[push]](ex:Binary[ex:Binary[ex:Binary[ex:Binary[lt:String + ex:Identifier[M]] + lt:String] + ex:Identifier[L]] + lt:String])]], ex:Logical[ex:Member[ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[querySelectorAll]](lt:String)] >>> ex:Identifier[length]] || ex:Call[ex:Member[ex:Identifier[q] >>> ex:Identifier[push]](lt:String)]]]',
        'pr:Identifier[a]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 314,
      type: 'fn',
      name: '[anonymous]:>>:binaryFn',
      loc: { start: { line: 189, column: 500 }, end: { line: 190, column: 101 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ReturnStatement',
      ],
      fnStatementTokens: [
        'pr:Identifier[a]',
        'pr:Identifier[c]',
        'pr:Identifier[d]',
        'pr:Identifier[e]',
        'st:Return[ex:Call[ex:Identifier[E](ex:Function[anonymous], ex:Object[ex:Identifier[constant] : ex:Logical[ex:Member[ex:Identifier[a] >>> ex:Identifier[constant]] && ex:Member[ex:Identifier[d] >>> ex:Identifier[constant]]], ex:Identifier[inputs] : ex:Logical[ex:Unary[! ex:Identifier[e]] && ex:Array[ex:Identifier[a], ex:Identifier[d]]]])]]',
      ],
    },
  },
  {
    comments: ['moment@2.8.3'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0011', location: 'body', id: '0011' },
    signature: {
      index: 233,
      type: 'fn',
      name: '[anonymous]:>>:zone',
      loc: { start: { line: 2337, column: 15 }, end: { line: 2369, column: 9 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[localAdjust]]',
        'de:Variable[pr:Identifier[offset] = ex:Logical[ex:Member[ex:This >>> ex:Identifier[_offset]] || lt:Numeric]]',
        'ex:Assignment[pr:Identifier[input] = ex:Binary[ex:Identifier[input] * lt:Numeric]]',
        'ex:Assignment[pr:Identifier[input] = ex:Call[ex:Identifier[timezoneMinutesFromString](ex:Identifier[input])]]',
        'ex:Assignment[pr:Identifier[localAdjust] = ex:Call[ex:Member[ex:This >>> ex:Identifier[_dateTzOffset]]()]]',
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[_changeInProgress]] = lt:Boolean]',
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[_changeInProgress]] = lt:Null]',
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[_isUTC]] = lt:Boolean]',
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[_offset]] = ex:Identifier[input]]',
        'ex:Call[ex:Identifier[addOrSubtractDurationFromMoment](ex:This, ex:Call[ex:Member[ex:Identifier[moment] >>> ex:Identifier[duration]](ex:Binary[ex:Identifier[offset] - ex:Identifier[input]], lt:String)], lt:Numeric, lt:Boolean)]',
        'ex:Call[ex:Member[ex:Identifier[moment] >>> ex:Identifier[updateOffset]](ex:This, lt:Boolean)]',
        'ex:Call[ex:Member[ex:This >>> ex:Identifier[subtract]](ex:Identifier[localAdjust], lt:String)]',
        'pr:Identifier[input]',
        'pr:Identifier[keepLocalTime]',
        'st:Else',
        'st:Else-If[ex:Unary[! ex:Member[ex:This >>> ex:Identifier[_changeInProgress]]]]',
        'st:If[ex:Binary[ex:Call[ex:Member[ex:Identifier[Math] >>> ex:Identifier[abs]](ex:Identifier[input])] < lt:Numeric]]',
        'st:If[ex:Binary[ex:Identifier[input] != lt:Null]]',
        'st:If[ex:Binary[ex:Identifier[localAdjust] != lt:Null]]',
        'st:If[ex:Binary[ex:Identifier[offset] !== ex:Identifier[input]]]',
        'st:If[ex:Binary[ex:Unary[typeof ex:Identifier[input]] === lt:String]]',
        'st:If[ex:Logical[ex:Unary[! ex:Identifier[keepLocalTime]] || ex:Member[ex:This >>> ex:Identifier[_changeInProgress]]]]',
        'st:If[ex:Logical[ex:Unary[! ex:Member[ex:This >>> ex:Identifier[_isUTC]]] && ex:Identifier[keepLocalTime]]]',
        'st:Return[ex:Conditional[ex:Member[ex:This >>> ex:Identifier[_isUTC]] ? ex:Identifier[offset] : ex:Call[ex:Member[ex:This >>> ex:Identifier[_dateTzOffset]]()]]]',
        'st:Return[ex:This]',
      ],
    },
  },
  {
    comments: ['underscore@1.7.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 6873,
      type: 'fn',
      name: '[anonymous]:>>:pluck',
      loc: { start: { line: 28610, column: 12 }, end: { line: 28612, column: 3 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[key]',
        'pr:Identifier[obj]',
        'st:Return[ex:Call[ex:Member[ex:Identifier[_] >>> ex:Identifier[map]](ex:Identifier[obj], ex:Call[ex:Member[ex:Identifier[_] >>> ex:Identifier[property]](ex:Identifier[key])])]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 6956,
      type: 'fn',
      name: '[anonymous]:>>:readIdent',
      loc: { start: { line: 12561, column: 13 }, end: { line: 12575, column: 3 } },
      fnStatementTypes: [
        't_st:ExpressionStatement',
        't_st:VariableDeclaration',
        't_st:WhileStatement',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[ch] = ex:Call[ex:Member[ex:Member[ex:This >>> ex:Identifier[text]] >>> ex:Identifier[charAt]](ex:Member[ex:This >>> ex:Identifier[index]])]]',
        'de:Variable[pr:Identifier[start] = ex:Member[ex:This >>> ex:Identifier[index]]]',
        'ex:Call[ex:Member[ex:Member[ex:This >>> ex:Identifier[tokens]] >>> ex:Identifier[push]](ex:Object[ex:Identifier[index] : ex:Identifier[start], ex:Identifier[text] : ex:Call[ex:Member[ex:Member[ex:This >>> ex:Identifier[text]] >>> ex:Identifier[slice]](ex:Identifier[start], ex:Member[ex:This >>> ex:Identifier[index]])], ex:Identifier[identifier] : lt:Boolean])]',
        'ex:Update[ex:Member[ex:This >>> ex:Identifier[index]]++]',
        'st:Break',
        'st:If[ex:Unary[! ex:Logical[ex:Call[ex:Member[ex:This >>> ex:Identifier[isIdent]](ex:Identifier[ch])] || ex:Call[ex:Member[ex:This >>> ex:Identifier[isNumber]](ex:Identifier[ch])]]]]',
        'st:While[ex:Binary[ex:Member[ex:This >>> ex:Identifier[index]] < ex:Member[ex:Member[ex:This >>> ex:Identifier[text]] >>> ex:Identifier[length]]]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 118,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:header',
      loc: { start: { line: 2, column: 16975 }, end: { line: 2, column: 17013 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[a]',
        'st:Return[ex:Call[ex:Member[ex:Identifier[Z] >>> ex:Identifier[test]](ex:Member[ex:Identifier[a] >>> ex:Identifier[nodeName]])]]',
      ],
    },
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 3099,
      type: 'fn',
      name: '[anonymous]:>>:jqLiteRemoveData',
      loc: { start: { line: 16314, column: 0 }, end: { line: 16333, column: 1 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[expandoId] = ex:Member[ex:Identifier[element] >>> ex:Identifier[ng339]]]',
        'de:Variable[pr:Identifier[expandoStore] = ex:Logical[ex:Identifier[expandoId] && ex:Member[ex:Identifier[jqCache] >c> ex:Identifier[expandoId]]]]',
        'ex:Assignment[pr:Member[ex:Identifier[element] >>> ex:Identifier[ng339]] = ex:Identifier[undefined]]',
        'ex:Call[ex:Identifier[jqLiteOff](ex:Identifier[element])]',
        'ex:Call[ex:Member[ex:Identifier[expandoStore] >>> ex:Identifier[handle]](ex:Object, lt:String)]',
        'ex:Unary[delete ex:Member[ex:Identifier[jqCache] >c> ex:Identifier[expandoId]]]',
        'ex:Unary[delete ex:Member[ex:Member[ex:Identifier[expandoStore] >>> ex:Identifier[data]] >c> ex:Identifier[name]]]',
        'pr:Identifier[element]',
        'pr:Identifier[name]',
        'st:If[ex:Identifier[expandoStore]]',
        'st:If[ex:Identifier[name]]',
        'st:If[ex:Member[ex:Identifier[expandoStore] >>> ex:Identifier[handle]]]',
        'st:If[ex:Member[ex:Member[ex:Identifier[expandoStore] >>> ex:Identifier[events]] >>> ex:Identifier[$destroy]]]',
        'st:Return',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 1966,
      type: 'fn',
      name: '[anonymous]:>>:$CacheFactoryProvider:>>:$get',
      loc: { start: { line: 19097, column: 14 }, end: { line: 19362, column: 3 } },
      fnStatementTypes: [
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:FunctionDeclaration',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Function[ex:Identifier[cacheFactory]]',
        'de:Variable[pr:Identifier[caches] = ex:Object]',
        'ex:Assignment[pr:Member[ex:Identifier[cacheFactory] >>> ex:Identifier[get]] = ex:Function[anonymous]]',
        'ex:Assignment[pr:Member[ex:Identifier[cacheFactory] >>> ex:Identifier[info]] = ex:Function[anonymous]]',
        'st:Return[ex:Identifier[cacheFactory]]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 201,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:link:>>:q:>>:k',
      loc: { start: { line: 239, column: 222 }, end: { line: 239, column: 448 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[c]]',
        'de:Variable[pr:Identifier[d] = lt:Numeric]',
        'ex:Assignment[pr:Identifier[c] = ex:New[ex:Identifier[bb](ex:Array)]]',
        'ex:Assignment[pr:Identifier[c] = ex:New[ex:Identifier[bb](ex:Identifier[a])]]',
        'ex:Binary[ex:Identifier[d] < ex:Member[ex:Identifier[a] >>> ex:Identifier[length]]]',
        'ex:Call[ex:Member[ex:Identifier[c] >>> ex:Identifier[put]](ex:Call[ex:Identifier[h](ex:Identifier[G], lt:Null, ex:Member[ex:Identifier[a] >c> ex:Identifier[d]])], ex:Unary[! lt:Numeric])]',
        'ex:Logical[ex:Identifier[G] && ex:Assignment[pr:Identifier[a] = ex:Call[ex:Identifier[h](ex:Identifier[G], lt:Null, ex:Identifier[a])]]]',
        'ex:Update[ex:Identifier[d]++]',
        'pr:Identifier[a]',
        'st:Else',
        'st:Else',
        'st:For',
        'st:If[ex:Identifier[n]]',
        'st:If[ex:Logical[ex:Identifier[G] && ex:Call[ex:Identifier[B](ex:Identifier[a])]]]',
        'st:Return[ex:Function[anonymous]]',
      ],
    },
  },

  /* 8th group */
  {
    comments: ['jquery@2.1.1'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 180,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:setDocument:>>:ID:>>:[anonymous]',
      loc: { start: { line: 2, column: 9320 }, end: { line: 2, column: 9416 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[c] = ex:Logical[ex:Binary[ex:Unary[typeof ex:Member[ex:Identifier[a] >>> ex:Identifier[getAttributeNode]]] !== ex:Identifier[C]] && ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[getAttributeNode]](lt:String)]]]',
        'pr:Identifier[a]',
        'st:Return[ex:Logical[ex:Identifier[c] && ex:Binary[ex:Member[ex:Identifier[c] >>> ex:Identifier[value]] === ex:Identifier[b]]]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.aq_com.az',
      app: 'com.atv.freeanemia-1-2015_04_06.apk',
    },
    file: { path: 'body/0002', location: 'body', id: '0002' },
    signature: {
      index: 501,
      type: 'fn',
      name: '[anonymous]:>>:set',
      loc: { start: { line: 4, column: 12019 }, end: { line: 4, column: 12061 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[a]',
        'pr:Identifier[b]',
        'st:Return[ex:Assignment[pr:Member[ex:Member[ex:Identifier[a] >>> ex:Identifier[style]] >>> ex:Identifier[cssText]] = ex:Binary[ex:Identifier[b] + lt:String]]]',
      ],
    },
  },
  {
    comments: ['jquery@2.2.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 6117,
      type: 'fn',
      name: '[anonymous]:>>:eq',
      loc: { start: { line: 60655, column: 5 }, end: { line: 60659, column: 2 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[j] = ex:Binary[ex:Unary[+ ex:Identifier[i]] + ex:Conditional[ex:Binary[ex:Identifier[i] < lt:Numeric] ? ex:Identifier[len] : lt:Numeric]]]',
        'de:Variable[pr:Identifier[len] = ex:Member[ex:This >>> ex:Identifier[length]]]',
        'pr:Identifier[i]',
        'st:Return[ex:Call[ex:Member[ex:This >>> ex:Identifier[pushStack]](ex:Conditional[ex:Logical[ex:Binary[ex:Identifier[j] >= lt:Numeric] && ex:Binary[ex:Identifier[j] < ex:Identifier[len]]] ? ex:Array[ex:Member[ex:This >c> ex:Identifier[j]]] : ex:Array])]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 148,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:sb:>>:[anonymous]',
      loc: { start: { line: 2, column: 18857 }, end: { line: 2, column: 18932 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
        't_st:WhileStatement',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[e] = ex:Member[ex:Identifier[a] >>> ex:Identifier[length]]]',
        'pr:Identifier[b]',
        'pr:Identifier[c]',
        'pr:Identifier[d]',
        'st:If[ex:Unary[! ex:Call[ex:Member[ex:Identifier[a] >c> ex:Identifier[e]](ex:Identifier[b], ex:Identifier[c], ex:Identifier[d])]]]',
        'st:Return[ex:Unary[! lt:Numeric]]',
        'st:Return[ex:Unary[! lt:Numeric]]',
        'st:While[ex:Update[ex:Identifier[e]--]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'io.shirkan.RavKav-1800000-2017_01_29.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 51,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:[anonymous]',
      loc: { start: { line: 2559, column: 21 }, end: { line: 2563, column: 2 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:IfStatement',
      ],
      fnStatementTokens: [
        'pr:Identifier[elem]',
        'pr:Identifier[isXML]',
        'pr:Identifier[name]',
        'st:If[ex:Logical[ex:Unary[! ex:Identifier[isXML]] && ex:Binary[ex:Call[ex:Member[ex:Member[ex:Identifier[elem] >>> ex:Identifier[nodeName]] >>> ex:Identifier[toLowerCase]]()] === lt:String]]]',
        'st:Return[ex:Member[ex:Identifier[elem] >>> ex:Identifier[defaultValue]]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.4'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 173,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:setDocument:>>:ID',
      loc: { start: { line: 2, column: 9013 }, end: { line: 2, column: 9100 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[b] = ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[replace]](ex:Identifier[ca], ex:Identifier[da])]]',
        'pr:Identifier[a]',
        'st:Return[ex:Function[anonymous]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 6533,
      type: 'fn',
      name: '[anonymous]:>>:jqLiteOn:>>:[anonymous]',
      loc: { start: { line: 3322, column: 51 }, end: { line: 3329, column: 11 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:IfStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[related] = ex:Member[ex:Identifier[event] >>> ex:Identifier[relatedTarget]]]',
        'de:Variable[pr:Identifier[target] = ex:This]',
        'ex:Call[ex:Identifier[handle](ex:Identifier[event], ex:Identifier[type])]',
        'pr:Identifier[event]',
        'st:If[ex:Logical[ex:Unary[! ex:Identifier[related]] || ex:Logical[ex:Binary[ex:Identifier[related] !== ex:Identifier[target]] && ex:Unary[! ex:Call[ex:Member[ex:Identifier[target] >>> ex:Identifier[contains]](ex:Identifier[related])]]]]]',
      ],
    },
  },
  {
    comments: ['bluebird@3.4.6'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 325,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:exports:>>:coroutine:>>:[anonymous]',
      loc: { start: { line: 29, column: 31913 }, end: { line: 30, column: 30 } },
      fnStatementTypes: ['t_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[e] = ex:Call[ex:Member[ex:Identifier[t] >>> ex:Identifier[apply]](ex:This, ex:Identifier[arguments])]]',
        'de:Variable[pr:Identifier[o] = ex:New[ex:Identifier[r](ex:Unary[void lt:Numeric], ex:Unary[void lt:Numeric], ex:Identifier[n], ex:Identifier[i])]]',
        'de:Variable[pr:Identifier[s] = ex:Call[ex:Member[ex:Identifier[o] >>> ex:Identifier[promise]]()]]',
        'st:Return[ex:Sequence[ex:Assignment[pr:Member[ex:Identifier[o] >>> ex:Identifier[_generator]] = ex:Identifier[e]], ex:Call[ex:Member[ex:Identifier[o] >>> ex:Identifier[_promiseFulfilled]](ex:Unary[void lt:Numeric])], ex:Identifier[s]]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 51,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:[anonymous]',
      loc: { start: { line: 2, column: 15915 }, end: { line: 2, column: 16134 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[b] = ex:Array]',
        'de:Variable[pr:Identifier[c] = ex:Array]',
        'de:Variable[pr:Identifier[d] = ex:Call[ex:Identifier[h](ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[replace]](ex:Identifier[R], lt:String)])]]',
        'pr:Identifier[a]',
        'st:Return[ex:Conditional[ex:Member[ex:Identifier[d] >c> ex:Identifier[u]] ? ex:Call[ex:Identifier[ib](ex:Function[anonymous])] : ex:Function[anonymous]]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.4'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 101,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:e',
      loc: { start: { line: 4, column: 16357 }, end: { line: 4, column: 16380 } },
      fnStatementTypes: ['t_st:ExpressionStatement'],
      fnStatementTokens: ['ex:Assignment[pr:Identifier[g] = ex:Identifier[arguments]]'],
    },
  },

  /* 9th group */
  {
    comments: ['lodash@2.4.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 7148,
      type: 'fn',
      name: '[anonymous]:>>:runInContext:>>:[anonymous]:>>:ctor',
      loc: { start: { line: 30460, column: 17 }, end: { line: 30460, column: 43 } },
      fnStatementTypes: ['t_st:ExpressionStatement'],
      fnStatementTokens: ['ex:Assignment[pr:Member[ex:This >>> ex:Identifier[x]] = lt:Numeric]'],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 422,
      type: 'fn',
      name: '[anonymous]:>>:prop',
      loc: { start: { line: 4, column: 869 }, end: { line: 4, column: 1108 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[d]]',
        'de:Variable[pr:Identifier[e]]',
        'de:Variable[pr:Identifier[f]]',
        'de:Variable[pr:Identifier[g] = ex:Member[ex:Identifier[a] >>> ex:Identifier[nodeType]]]',
        'pr:Identifier[a]',
        'pr:Identifier[b]',
        'pr:Identifier[c]',
        'st:If[ex:Logical[ex:Logical[ex:Logical[ex:Identifier[a] && ex:Binary[lt:Numeric !== ex:Identifier[g]]] && ex:Binary[lt:Numeric !== ex:Identifier[g]]] && ex:Binary[lt:Numeric !== ex:Identifier[g]]]]',
        'st:Return[ex:Sequence[ex:Assignment[pr:Identifier[f] = ex:Logical[ex:Binary[lt:Numeric !== ex:Identifier[g]] || ex:Unary[! ex:Call[ex:Member[ex:Identifier[n] >>> ex:Identifier[isXMLDoc]](ex:Identifier[a])]]]], ex:Logical[ex:Identifier[f] && ex:Sequence[ex:Assignment[pr:Identifier[b] = ex:Logical[ex:Member[ex:Member[ex:Identifier[n] >>> ex:Identifier[propFix]] >c> ex:Identifier[b]] || ex:Identifier[b]]], ex:Assignment[pr:Identifier[e] = ex:Member[ex:Member[ex:Identifier[n] >>> ex:Identifier[propHooks]] >c> ex:Identifier[b]]]]], ex:Conditional[ex:Binary[ex:Unary[void lt:Numeric] !== ex:Identifier[c]] ? ex:Conditional[ex:Logical[ex:Logical[ex:Identifier[e] && ex:Binary[lt:String in ex:Identifier[e]]] && ex:Binary[ex:Unary[void lt:Numeric] !== ex:Assignment[pr:Identifier[d] = ex:Call[ex:Member[ex:Identifier[e] >>> ex:Identifier[set]](ex:Identifier[a], ex:Identifier[c], ex:Identifier[b])]]]] ? ex:Identifier[d] : ex:Assignment[pr:Member[ex:Identifier[a] >c> ex:Identifier[b]] = ex:Identifier[c]]] : ex:Conditional[ex:Logical[ex:Logical[ex:Identifier[e] && ex:Binary[lt:String in ex:Identifier[e]]] && ex:Binary[lt:Null !== ex:Assignment[pr:Identifier[d] = ex:Call[ex:Member[ex:Identifier[e] >>> ex:Identifier[get]](ex:Identifier[a], ex:Identifier[b])]]]] ? ex:Identifier[d] : ex:Member[ex:Identifier[a] >c> ex:Identifier[b]]]]]]',
      ],
    },
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 1120,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:hasOption',
      loc: { start: { line: 43190, column: 19 }, end: { line: 43192, column: 3 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[value]',
        'st:Return[ex:Unary[! ex:Unary[! ex:Call[ex:Member[ex:Identifier[optionsMap] >>> ex:Identifier[get]](ex:Identifier[value])]]]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 1416,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:ngModelCompile:>>:ngModelPreLink:>>:[anonymous]',
      loc: { start: { line: 38683, column: 32 }, end: { line: 38685, column: 11 } },
      fnStatementTypes: ['t_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Member[ex:Identifier[formCtrl] >>> ex:Identifier[$removeControl]](ex:Identifier[modelCtrl])]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 1980,
      type: 'fn',
      name: '[anonymous]:>>:$CompileProvider:>>:[anonymous]',
      loc: { start: { line: 20379, column: 4 }, end: { line: 22071, column: 3 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:FunctionDeclaration',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Function[ex:Identifier[addAttrInterpolateDirective]]',
        'de:Function[ex:Identifier[addDirective]]',
        'de:Function[ex:Identifier[addTextInterpolateDirective]]',
        'de:Function[ex:Identifier[applyDirectivesToNode]]',
        'de:Function[ex:Identifier[assertNoDuplicate]]',
        'de:Function[ex:Identifier[byPriority]]',
        'de:Function[ex:Identifier[cloneAndAnnotateFn]]',
        'de:Function[ex:Identifier[collectDirectives]]',
        'de:Function[ex:Identifier[compileNodes]]',
        'de:Function[ex:Identifier[compileTemplateUrl]]',
        'de:Function[ex:Identifier[compile]]',
        'de:Function[ex:Identifier[createBoundTranscludeFn]]',
        'de:Function[ex:Identifier[detectNamespaceForChildElements]]',
        'de:Function[ex:Identifier[directiveIsMultiElement]]',
        'de:Function[ex:Identifier[getTrustedContext]]',
        'de:Function[ex:Identifier[groupElementsLinkFnWrapper]]',
        'de:Function[ex:Identifier[groupScan]]',
        'de:Function[ex:Identifier[initializeDirectiveBindings]]',
        'de:Function[ex:Identifier[invokeLinkFn]]',
        'de:Function[ex:Identifier[markDirectivesAsIsolate]]',
        'de:Function[ex:Identifier[mergeTemplateAttributes]]',
        'de:Function[ex:Identifier[replaceWith]]',
        'de:Function[ex:Identifier[safeAddClass]]',
        'de:Function[ex:Identifier[wrapTemplate]]',
        'de:Variable[pr:Identifier[Attributes] = ex:Function[anonymous]]',
        'de:Variable[pr:Identifier[NG_ATTR_BINDING] = lt:RegExp]',
        'de:Variable[pr:Identifier[denormalizeTemplate] = ex:Conditional[ex:Logical[ex:Binary[ex:Identifier[startSymbol] == lt:String] || ex:Binary[ex:Identifier[endSymbol] == lt:String]] ? ex:Identifier[identity] : ex:Function[ex:Identifier[denormalizeTemplate]]]]',
        'de:Variable[pr:Identifier[endSymbol] = ex:Call[ex:Member[ex:Identifier[$interpolate] >>> ex:Identifier[endSymbol]]()]]',
        'de:Variable[pr:Identifier[startSymbol] = ex:Call[ex:Member[ex:Identifier[$interpolate] >>> ex:Identifier[startSymbol]]()]]',
        'ex:Assignment[pr:Member[ex:Identifier[Attributes] >>> ex:Identifier[prototype]] = ex:Object[ex:Identifier[$normalize] : ex:Identifier[directiveNormalize], ex:Identifier[$addClass] : ex:Function[anonymous], ex:Identifier[$removeClass] : ex:Function[anonymous], ex:Identifier[$updateClass] : ex:Function[anonymous], ex:Identifier[$set] : ex:Function[anonymous], ex:Identifier[$observe] : ex:Function[anonymous]]]',
        'ex:Assignment[pr:Member[ex:Identifier[compile] >>> ex:Identifier[$$addBindingClass]] = ex:Conditional[ex:Identifier[debugInfoEnabled] ? ex:Function[ex:Identifier[$$addBindingClass]] : ex:Identifier[noop]]]',
        'ex:Assignment[pr:Member[ex:Identifier[compile] >>> ex:Identifier[$$addBindingInfo]] = ex:Conditional[ex:Identifier[debugInfoEnabled] ? ex:Function[ex:Identifier[$$addBindingInfo]] : ex:Identifier[noop]]]',
        'ex:Assignment[pr:Member[ex:Identifier[compile] >>> ex:Identifier[$$addScopeClass]] = ex:Conditional[ex:Identifier[debugInfoEnabled] ? ex:Function[ex:Identifier[$$addScopeClass]] : ex:Identifier[noop]]]',
        'ex:Assignment[pr:Member[ex:Identifier[compile] >>> ex:Identifier[$$addScopeInfo]] = ex:Conditional[ex:Identifier[debugInfoEnabled] ? ex:Function[ex:Identifier[$$addScopeInfo]] : ex:Identifier[noop]]]',
        'pr:Identifier[$$sanitizeUri]',
        'pr:Identifier[$animate]',
        'pr:Identifier[$controller]',
        'pr:Identifier[$document]',
        'pr:Identifier[$exceptionHandler]',
        'pr:Identifier[$injector]',
        'pr:Identifier[$interpolate]',
        'pr:Identifier[$parse]',
        'pr:Identifier[$rootScope]',
        'pr:Identifier[$sce]',
        'pr:Identifier[$templateRequest]',
        'st:Return[ex:Identifier[compile]]',
      ],
    },
  },
  {
    comments: ['jquery@1.9.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'net.jp.apps.noboruhirohara.yakei-102008-2016_05_02.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 2195,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:set',
      loc: { start: { line: 4010, column: 8 }, end: { line: 4015, column: 4 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:IfStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Member[ex:Identifier[elem] >>> ex:Identifier[setAttribute]](ex:Identifier[name], lt:String)]',
        'pr:Identifier[elem]',
        'pr:Identifier[value]',
        'st:If[ex:Binary[ex:Identifier[value] === lt:String]]',
        'st:Return[ex:Identifier[value]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 2018,
      type: 'fn',
      name: '[anonymous]:>>:$CompileProvider:>>:[anonymous]:>>:compile:>>:publicLinkFn',
      loc: { start: { line: 20682, column: 13 }, end: { line: 20730, column: 7 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[$linkNode]]',
        'de:Variable[pr:Identifier[controllerName]]',
        'de:Variable[pr:Identifier[futureParentElement] = ex:Member[ex:Identifier[options] >>> ex:Identifier[futureParentElement]]]',
        'de:Variable[pr:Identifier[parentBoundTranscludeFn] = ex:Member[ex:Identifier[options] >>> ex:Identifier[parentBoundTranscludeFn]]]',
        'de:Variable[pr:Identifier[transcludeControllers] = ex:Member[ex:Identifier[options] >>> ex:Identifier[transcludeControllers]]]',
        'ex:Assignment[pr:Identifier[$linkNode] = ex:Call[ex:Identifier[jqLite](ex:Call[ex:Identifier[wrapTemplate](ex:Identifier[namespace], ex:Call[ex:Member[ex:Call[ex:Member[ex:Call[ex:Identifier[jqLite](lt:String)] >>> ex:Identifier[append]](ex:Identifier[$compileNodes])] >>> ex:Identifier[html]]()])])]]',
        'ex:Assignment[pr:Identifier[$linkNode] = ex:Call[ex:Member[ex:Member[ex:Identifier[JQLitePrototype] >>> ex:Identifier[clone]] >>> ex:Identifier[call]](ex:Identifier[$compileNodes])]]',
        'ex:Assignment[pr:Identifier[$linkNode] = ex:Identifier[$compileNodes]]',
        'ex:Assignment[pr:Identifier[namespace] = ex:Call[ex:Identifier[detectNamespaceForChildElements](ex:Identifier[futureParentElement])]]',
        'ex:Assignment[pr:Identifier[options] = ex:Logical[ex:Identifier[options] || ex:Object]]',
        'ex:Assignment[pr:Identifier[parentBoundTranscludeFn] = ex:Member[ex:Identifier[parentBoundTranscludeFn] >>> ex:Identifier[$$boundTransclude]]]',
        'ex:Call[ex:Identifier[assertArg](ex:Identifier[scope], lt:String)]',
        'ex:Call[ex:Identifier[cloneConnectFn](ex:Identifier[$linkNode], ex:Identifier[scope])]',
        'ex:Call[ex:Identifier[compositeLinkFn](ex:Identifier[scope], ex:Identifier[$linkNode], ex:Identifier[$linkNode], ex:Identifier[parentBoundTranscludeFn])]',
        'ex:Call[ex:Member[ex:Identifier[$linkNode] >>> ex:Identifier[data]](ex:Binary[ex:Binary[lt:String + ex:Identifier[controllerName]] + lt:String], ex:Member[ex:Member[ex:Identifier[transcludeControllers] >c> ex:Identifier[controllerName]] >>> ex:Identifier[instance]])]',
        'ex:Call[ex:Member[ex:Identifier[compile] >>> ex:Identifier[$$addScopeInfo]](ex:Identifier[$linkNode], ex:Identifier[scope])]',
        'ex:Identifier[transcludeControllers]',
        'pr:Identifier[cloneConnectFn]',
        'pr:Identifier[options]',
        'pr:Identifier[scope]',
        'st:Else',
        'st:Else-If[ex:Identifier[cloneConnectFn]]',
        'st:For-In',
        'st:If[ex:Binary[ex:Identifier[namespace] !== lt:String]]',
        'st:If[ex:Identifier[cloneConnectFn]]',
        'st:If[ex:Identifier[compositeLinkFn]]',
        'st:If[ex:Identifier[transcludeControllers]]',
        'st:If[ex:Logical[ex:Identifier[parentBoundTranscludeFn] && ex:Member[ex:Identifier[parentBoundTranscludeFn] >>> ex:Identifier[$$boundTransclude]]]]',
        'st:If[ex:Unary[! ex:Identifier[namespace]]]',
        'st:Return[ex:Identifier[$linkNode]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.aq_com.az',
      app: 'com.atv.freeanemia-1-2015_04_06.apk',
    },
    file: { path: 'body/0002', location: 'body', id: '0002' },
    signature: {
      index: 130,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:i',
      loc: { start: { line: 3, column: 26142 }, end: { line: 3, column: 27288 } },
      fnStatementTypes: ['t_st:ExpressionStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[b]]',
        'de:Variable[pr:Identifier[c]]',
        'de:Variable[pr:Identifier[d]]',
        'de:Variable[pr:Identifier[i]]',
        'ex:Sequence[ex:Assignment[pr:Identifier[c] = ex:Member[ex:Call[ex:Member[ex:Identifier[y] >>> ex:Identifier[getElementsByTagName]](lt:String)] >c> lt:Numeric]], ex:Logical[ex:Logical[ex:Identifier[c] && ex:Member[ex:Identifier[c] >>> ex:Identifier[style]]] && ex:Sequence[ex:Assignment[pr:Identifier[b] = ex:Call[ex:Member[ex:Identifier[y] >>> ex:Identifier[createElement]](lt:String)]], ex:Assignment[pr:Identifier[d] = ex:Call[ex:Member[ex:Identifier[y] >>> ex:Identifier[createElement]](lt:String)]], ex:Assignment[pr:Member[ex:Member[ex:Identifier[d] >>> ex:Identifier[style]] >>> ex:Identifier[cssText]] = lt:String], ex:Call[ex:Member[ex:Call[ex:Member[ex:Identifier[c] >>> ex:Identifier[appendChild]](ex:Identifier[d])] >>> ex:Identifier[appendChild]](ex:Identifier[b])], ex:Assignment[pr:Member[ex:Member[ex:Identifier[b] >>> ex:Identifier[style]] >>> ex:Identifier[cssText]] = lt:String], ex:Assignment[pr:Identifier[e] = ex:Assignment[pr:Identifier[f] = ex:Unary[! lt:Numeric]]], ex:Assignment[pr:Identifier[h] = ex:Unary[! lt:Numeric]], ex:Logical[ex:Member[ex:Identifier[a] >>> ex:Identifier[getComputedStyle]] && ex:Sequence[ex:Assignment[pr:Identifier[e] = ex:Binary[lt:String !== ex:Member[ex:Logical[ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[getComputedStyle]](ex:Identifier[b], lt:Null)] || ex:Object] >>> ex:Identifier[top]]]], ex:Assignment[pr:Identifier[f] = ex:Binary[lt:String === ex:Member[ex:Logical[ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[getComputedStyle]](ex:Identifier[b], lt:Null)] || ex:Object[ex:Identifier[width] : lt:String]] >>> ex:Identifier[width]]]], ex:Assignment[pr:Identifier[i] = ex:Call[ex:Member[ex:Identifier[b] >>> ex:Identifier[appendChild]](ex:Call[ex:Member[ex:Identifier[y] >>> ex:Identifier[createElement]](lt:String)])]], ex:Assignment[pr:Member[ex:Member[ex:Identifier[i] >>> ex:Identifier[style]] >>> ex:Identifier[cssText]] = ex:Assignment[pr:Member[ex:Member[ex:Identifier[b] >>> ex:Identifier[style]] >>> ex:Identifier[cssText]] = lt:String]], ex:Assignment[pr:Member[ex:Member[ex:Identifier[i] >>> ex:Identifier[style]] >>> ex:Identifier[marginRight]] = ex:Assignment[pr:Member[ex:Member[ex:Identifier[i] >>> ex:Identifier[style]] >>> ex:Identifier[width]] = lt:String]], ex:Assignment[pr:Member[ex:Member[ex:Identifier[b] >>> ex:Identifier[style]] >>> ex:Identifier[width]] = lt:String], ex:Assignment[pr:Identifier[h] = ex:Unary[! ex:Call[ex:Identifier[parseFloat](ex:Member[ex:Logical[ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[getComputedStyle]](ex:Identifier[i], lt:Null)] || ex:Object] >>> ex:Identifier[marginRight]])]]]]], ex:Assignment[pr:Member[ex:Identifier[b] >>> ex:Identifier[innerHTML]] = lt:String], ex:Assignment[pr:Identifier[i] = ex:Call[ex:Member[ex:Identifier[b] >>> ex:Identifier[getElementsByTagName]](lt:String)]], ex:Assignment[pr:Member[ex:Member[ex:Member[ex:Identifier[i] >c> lt:Numeric] >>> ex:Identifier[style]] >>> ex:Identifier[cssText]] = lt:String], ex:Assignment[pr:Identifier[g] = ex:Binary[lt:Numeric === ex:Member[ex:Member[ex:Identifier[i] >c> lt:Numeric] >>> ex:Identifier[offsetHeight]]]], ex:Logical[ex:Identifier[g] && ex:Sequence[ex:Assignment[pr:Member[ex:Member[ex:Member[ex:Identifier[i] >c> lt:Numeric] >>> ex:Identifier[style]] >>> ex:Identifier[display]] = lt:String], ex:Assignment[pr:Member[ex:Member[ex:Member[ex:Identifier[i] >c> lt:Numeric] >>> ex:Identifier[style]] >>> ex:Identifier[display]] = lt:String], ex:Assignment[pr:Identifier[g] = ex:Binary[lt:Numeric === ex:Member[ex:Member[ex:Identifier[i] >c> lt:Numeric] >>> ex:Identifier[offsetHeight]]]]]], ex:Call[ex:Member[ex:Identifier[c] >>> ex:Identifier[removeChild]](ex:Identifier[d])]]]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 102,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:e',
      loc: { start: { line: 4, column: 16359 }, end: { line: 4, column: 16382 } },
      fnStatementTypes: ['t_st:ExpressionStatement'],
      fnStatementTokens: ['ex:Assignment[pr:Identifier[g] = ex:Identifier[arguments]]'],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 1032,
      type: 'fn',
      name: '[anonymous]:>>:ue:>>:[anonymous]',
      loc: { start: { line: 221, column: 124 }, end: { line: 221, column: 397 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[d] = ex:This]',
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[$options]] = ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[$eval]](ex:Member[ex:Identifier[c] >>> ex:Identifier[ngModelOptions]])]]',
        'ex:Conditional[ex:Binary[ex:Member[ex:Member[ex:This >>> ex:Identifier[$options]] >>> ex:Identifier[updateOn]] !== ex:Identifier[u]] ? ex:Sequence[ex:Assignment[pr:Member[ex:Member[ex:This >>> ex:Identifier[$options]] >>> ex:Identifier[updateOnDefault]] = ex:Unary[! lt:Numeric]], ex:Assignment[pr:Member[ex:Member[ex:This >>> ex:Identifier[$options]] >>> ex:Identifier[updateOn]] = ex:Call[ex:Identifier[U](ex:Call[ex:Member[ex:Member[ex:Member[ex:This >>> ex:Identifier[$options]] >>> ex:Identifier[updateOn]] >>> ex:Identifier[replace]](ex:Identifier[Nf], ex:Function[anonymous])])]]] : ex:Assignment[pr:Member[ex:Member[ex:This >>> ex:Identifier[$options]] >>> ex:Identifier[updateOnDefault]] = ex:Unary[! lt:Numeric]]]',
        'pr:Identifier[a]',
        'pr:Identifier[c]',
      ],
    },
  },

  /* 10th group */
  {
    comments: ['jquery@2.1.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'io.shirkan.RavKav-1800000-2017_01_29.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 2,
      type: 'fn',
      name: '[anonymous]:>>:_data',
      loc: { start: { line: 3745, column: 8 }, end: { line: 3747, column: 2 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ReturnStatement',
      ],
      fnStatementTokens: [
        'pr:Identifier[data]',
        'pr:Identifier[elem]',
        'pr:Identifier[name]',
        'st:Return[ex:Call[ex:Member[ex:Identifier[data_priv] >>> ex:Identifier[access]](ex:Identifier[elem], ex:Identifier[name], ex:Identifier[data])]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 85,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:b',
      loc: { start: { line: 4, column: 18941 }, end: { line: 4, column: 19116 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[e]',
        'st:Return[ex:Call[ex:Identifier[J](ex:This, ex:Function[anonymous], ex:Identifier[b], ex:Identifier[e], ex:Member[ex:Identifier[arguments] >>> ex:Identifier[length]], lt:Null)]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'io.shirkan.RavKav-1800000-2017_01_29.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 116,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:getText',
      loc: { start: { line: 1477, column: 27 }, end: { line: 1506, column: 1 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[i] = lt:Numeric]',
        'de:Variable[pr:Identifier[nodeType] = ex:Member[ex:Identifier[elem] >>> ex:Identifier[nodeType]]]',
        'de:Variable[pr:Identifier[node]]',
        'de:Variable[pr:Identifier[ret] = lt:String]',
        'ex:Assignment[pr:Identifier[elem] = ex:Member[ex:Identifier[elem] >>> ex:Identifier[firstChild]]]',
        'ex:Assignment[pr:Identifier[elem] = ex:Member[ex:Identifier[elem] >>> ex:Identifier[nextSibling]]]',
        'ex:Assignment[pr:Identifier[ret] += ex:Call[ex:Identifier[getText](ex:Identifier[elem])]]',
        'ex:Assignment[pr:Identifier[ret] += ex:Call[ex:Identifier[getText](ex:Identifier[node])]]',
        'ex:Identifier[elem]',
        'pr:Identifier[elem]',
        'st:Else',
        'st:Else-If[ex:Logical[ex:Binary[ex:Identifier[nodeType] === lt:Numeric] || ex:Binary[ex:Identifier[nodeType] === lt:Numeric]]]',
        'st:Else-If[ex:Logical[ex:Logical[ex:Binary[ex:Identifier[nodeType] === lt:Numeric] || ex:Binary[ex:Identifier[nodeType] === lt:Numeric]] || ex:Binary[ex:Identifier[nodeType] === lt:Numeric]]]',
        'st:For',
        'st:If[ex:Binary[ex:Unary[typeof ex:Member[ex:Identifier[elem] >>> ex:Identifier[textContent]]] === lt:String]]',
        'st:If[ex:Unary[! ex:Identifier[nodeType]]]',
        'st:Return[ex:Identifier[ret]]',
        'st:Return[ex:Member[ex:Identifier[elem] >>> ex:Identifier[nodeValue]]]',
        'st:Return[ex:Member[ex:Identifier[elem] >>> ex:Identifier[textContent]]]',
        'st:While[ex:Assignment[pr:Identifier[node] = ex:Member[ex:Identifier[elem] >c> ex:Update[ex:Identifier[i]++]]]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.1'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 549,
      type: 'fn',
      name: '[anonymous]:>>:x:>>:[anonymous]',
      loc: { start: { line: 2, column: 22912 }, end: { line: 2, column: 22950 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[a]',
        'st:Return[ex:Binary[ex:Binary[ex:Call[ex:Member[ex:Identifier[g] >>> ex:Identifier[call]](ex:Identifier[b], ex:Identifier[a])] >= lt:Numeric] !== ex:Identifier[c]]]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 5287,
      type: 'fn',
      name: '[anonymous]:>>:$RootScopeProvider:>>:[anonymous]:>>:$watch:>>:deregisterWatch',
      loc: { start: { line: 15298, column: 15 }, end: { line: 15303, column: 9 } },
      fnStatementTypes: ['t_st:ExpressionStatement', 't_st:IfStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Identifier[lastDirtyWatch] = lt:Null]',
        'ex:Call[ex:Identifier[incrementWatchersCount](ex:Identifier[scope], ex:Unary[- lt:Numeric])]',
        'st:If[ex:Binary[ex:Call[ex:Identifier[arrayRemove](ex:Identifier[array], ex:Identifier[watcher])] >= lt:Numeric]]',
      ],
    },
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 3031,
      type: 'fn',
      name: '[anonymous]:>>:isBoolean',
      loc: { start: { line: 14091, column: 0 }, end: { line: 14093, column: 1 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[value]',
        'st:Return[ex:Binary[ex:Unary[typeof ex:Identifier[value]] === lt:String]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.aq_com.az',
      app: 'com.atv.freeanemia-1-2015_04_06.apk',
    },
    file: { path: 'body/0002', location: 'body', id: '0002' },
    signature: {
      index: 576,
      type: 'fn',
      name: '[anonymous]:>>:w:>>:[anonymous]',
      loc: { start: { line: 2, column: 23040 }, end: { line: 2, column: 23069 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[a]',
        'st:Return[ex:Binary[ex:Binary[ex:Identifier[a] === ex:Identifier[b]] !== ex:Identifier[c]]]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 840,
      type: 'fn',
      name: '[anonymous]:>>:rc:>>:d:>>:[anonymous]',
      loc: { start: { line: 18, column: 80 }, end: { line: 18, column: 150 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
      ],
      fnStatementTokens: [
        'ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[$apply]](ex:Function[anonymous])]',
        'pr:Identifier[a]',
        'pr:Identifier[b]',
        'pr:Identifier[c]',
        'pr:Identifier[d]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 816,
      type: 'fn',
      name: '[anonymous]:>>:Qe:>>:[anonymous]',
      loc: { start: { line: 46, column: 297 }, end: { line: 46, column: 331 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: ['pr:Identifier[b]', 'st:Return[ex:Call[ex:Identifier[b](lt:String)]]'],
    },
  },
  {
    comments: ['moment@2.8.3'],
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0011', location: 'body', id: '0011' },
    signature: {
      index: 10,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]',
      loc: { start: { line: 2313, column: 17 }, end: { line: 2316, column: 18 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Identifier[other] = ex:Call[ex:Member[ex:Identifier[moment] >>> ex:Identifier[apply]](lt:Null, ex:Identifier[arguments])]]',
        'pr:Identifier[other]',
        'st:Return[ex:Conditional[ex:Binary[ex:Identifier[other] < ex:This] ? ex:This : ex:Identifier[other]]]',
      ],
    },
  },

  /* 11th group */
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 5672,
      type: 'fn',
      name: '[anonymous]:>>:binary%:>>:[anonymous]',
      loc: { start: { line: 13796, column: 11 }, end: { line: 13799, column: 5 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[arg] = ex:Binary[ex:Call[ex:Identifier[left](ex:Identifier[scope], ex:Identifier[locals], ex:Identifier[assign], ex:Identifier[inputs])] % ex:Call[ex:Identifier[right](ex:Identifier[scope], ex:Identifier[locals], ex:Identifier[assign], ex:Identifier[inputs])]]]',
        'pr:Identifier[assign]',
        'pr:Identifier[inputs]',
        'pr:Identifier[locals]',
        'pr:Identifier[scope]',
        'st:Return[ex:Conditional[ex:Identifier[context] ? ex:Object[ex:Identifier[value] : ex:Identifier[arg]] : ex:Identifier[arg]]]',
      ],
    },
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 2607,
      type: 'fn',
      name: '[anonymous]:>>:baseInputType:>>:[anonymous]',
      loc: { start: { line: 36265, column: 33 }, end: { line: 36268, column: 5 } },
      fnStatementTypes: ['t_st:ExpressionStatement', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Identifier[composing] = lt:Boolean]',
        'ex:Call[ex:Identifier[listener]()]',
      ],
    },
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 7459,
      type: 'fn',
      name: '[anonymous]:>>:startingTag:>>:[anonymous]',
      loc: { start: { line: 1271, column: 33 }, end: { line: 1271, column: 96 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[match]',
        'pr:Identifier[nodeName]',
        'st:Return[ex:Binary[lt:String + ex:Call[ex:Identifier[lowercase](ex:Identifier[nodeName])]]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.aq_com.az',
      app: 'com.atv.freeanemia-1-2015_04_06.apk',
    },
    file: { path: 'body/0002', location: 'body', id: '0002' },
    signature: {
      index: 199,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:target',
      loc: { start: { line: 2, column: 16582 }, end: { line: 2, column: 16656 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[c] = ex:Logical[ex:Member[ex:Identifier[a] >>> ex:Identifier[location]] && ex:Member[ex:Member[ex:Identifier[a] >>> ex:Identifier[location]] >>> ex:Identifier[hash]]]]',
        'pr:Identifier[b]',
        'st:Return[ex:Logical[ex:Identifier[c] && ex:Binary[ex:Call[ex:Member[ex:Identifier[c] >>> ex:Identifier[slice]](lt:Numeric)] === ex:Member[ex:Identifier[b] >>> ex:Identifier[id]]]]]',
      ],
    },
  },
  {
    comments: ['jquery@1.9.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'net.jp.apps.noboruhirohara.yakei-102008-2016_05_02.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 4253,
      type: 'fn',
      name: '[anonymous]:>>:swing',
      loc: { start: { line: 10694, column: 8 }, end: { line: 10696, column: 2 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[p]',
        'st:Return[ex:Binary[lt:Numeric - ex:Binary[ex:Call[ex:Member[ex:Identifier[Math] >>> ex:Identifier[cos]](ex:Binary[ex:Identifier[p] * ex:Member[ex:Identifier[Math] >>> ex:Identifier[PI]]])] / lt:Numeric]]]',
      ],
    },
  },
  {
    comments: ['jquery@2.1.4'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 120,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:isXML',
      loc: { start: { line: 2, column: 8133 }, end: { line: 2, column: 8223 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[b] = ex:Logical[ex:Identifier[a] && ex:Member[ex:Logical[ex:Member[ex:Identifier[a] >>> ex:Identifier[ownerDocument]] || ex:Identifier[a]] >>> ex:Identifier[documentElement]]]]',
        'pr:Identifier[a]',
        'st:Return[ex:Conditional[ex:Identifier[b] ? ex:Binary[lt:String !== ex:Member[ex:Identifier[b] >>> ex:Identifier[nodeName]]] : ex:Unary[! lt:Numeric]]]',
      ],
    },
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 2921,
      type: 'fn',
      name: '[anonymous]:>>:FormController:>>:$removeControl:>>:[anonymous]',
      loc: { start: { line: 34778, column: 25 }, end: { line: 34780, column: 5 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Member[ex:Identifier[form] >>> ex:Identifier[$setValidity]](ex:Identifier[name], lt:Null, ex:Identifier[control])]',
        'pr:Identifier[name]',
        'pr:Identifier[value]',
      ],
    },
  },
  {
    comments: ['jquery@2.2.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 5597,
      type: 'fn',
      name: '[anonymous]:>>:animate:>>:doAnimation',
      loc: { start: { line: 67388, column: 17 }, end: { line: 67397, column: 4 } },
      fnStatementTypes: ['t_st:IfStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[anim] = ex:Call[ex:Identifier[Animation](ex:This, ex:Call[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[extend]](ex:Object, ex:Identifier[prop])], ex:Identifier[optall])]]',
        'ex:Call[ex:Member[ex:Identifier[anim] >>> ex:Identifier[stop]](lt:Boolean)]',
        'st:If[ex:Logical[ex:Identifier[empty] || ex:Call[ex:Member[ex:Identifier[dataPriv] >>> ex:Identifier[get]](ex:This, lt:String)]]]',
      ],
    },
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 3095,
      type: 'fn',
      name: '[anonymous]:>>:jqLiteParseHTML',
      loc: { start: { line: 16202, column: 0 }, end: { line: 16215, column: 1 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[parsed]]',
        'ex:Assignment[pr:Identifier[context] = ex:Logical[ex:Identifier[context] || ex:Identifier[document]]]',
        'pr:Identifier[context]',
        'pr:Identifier[html]',
        'st:If[ex:Assignment[pr:Identifier[parsed] = ex:Call[ex:Identifier[jqLiteBuildFragment](ex:Identifier[html], ex:Identifier[context])]]]',
        'st:If[ex:Assignment[pr:Identifier[parsed] = ex:Call[ex:Member[ex:Identifier[SINGLE_TAG_REGEXP] >>> ex:Identifier[exec]](ex:Identifier[html])]]]',
        'st:Return[ex:Array[ex:Call[ex:Member[ex:Identifier[context] >>> ex:Identifier[createElement]](ex:Member[ex:Identifier[parsed] >c> lt:Numeric])]]]',
        'st:Return[ex:Array]',
        'st:Return[ex:Member[ex:Identifier[parsed] >>> ex:Identifier[childNodes]]]',
      ],
    },
  },
  {
    comments: ['bootstrap@3.3.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0004', location: 'head', id: '0004' },
    signature: {
      index: 65,
      type: 'fn',
      name: '[anonymous]:>>:enable',
      loc: { start: { line: 1636, column: 29 }, end: { line: 1638, column: 3 } },
      fnStatementTypes: ['t_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[enabled]] = lt:Boolean]',
      ],
    },
  },
]

// these are all functions that have 'shouldSkip = true'.
// that is because these functions are minified.
// they have comments or some other identifying information
// but finding functions that were changed between versions
// is very challenging for these
const minified: TodoAppFunction[] = [
  /* 1st group */
  {
    comments: ['jquery@1.11.2', 'minified file'],
    shouldSkip: true,
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 459,
      type: 'fn',
      name: '[anonymous]:>>:promise',
      loc: { start: { line: 2, column: 30332 }, end: { line: 2, column: 30789 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:IfStatement', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[c] = ex:Unary[! lt:Numeric]]',
        'ex:Assignment[pr:Identifier[c] = ex:Logical[ex:Binary[lt:Null == ex:Member[ex:Identifier[a] >>> ex:Identifier[frameElement]]] && ex:Member[ex:Identifier[y] >>> ex:Identifier[documentElement]]]]',
        'ex:Call[ex:Identifier[setTimeout](ex:Member[ex:Identifier[m] >>> ex:Identifier[ready]])]',
        'ex:Logical[ex:Logical[ex:Identifier[c] && ex:Member[ex:Identifier[c] >>> ex:Identifier[doScroll]]] && ex:Unary[! ex:Call[ex:Function[ex:Identifier[e]]()]]]',
        'ex:Sequence[ex:Call[ex:Member[ex:Identifier[y] >>> ex:Identifier[addEventListener]](lt:String, ex:Identifier[J], ex:Unary[! lt:Numeric])], ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[addEventListener]](lt:String, ex:Identifier[J], ex:Unary[! lt:Numeric])]]',
        'ex:Sequence[ex:Call[ex:Member[ex:Identifier[y] >>> ex:Identifier[attachEvent]](lt:String, ex:Identifier[J])], ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[attachEvent]](lt:String, ex:Identifier[J])]]',
        'pr:Identifier[b]',
        'st:Else',
        'st:Else-If[ex:Member[ex:Identifier[y] >>> ex:Identifier[addEventListener]]]',
        'st:If[ex:Sequence[ex:Assignment[pr:Identifier[H] = ex:Call[ex:Member[ex:Identifier[m] >>> ex:Identifier[Deferred]]()]], ex:Binary[lt:String === ex:Member[ex:Identifier[y] >>> ex:Identifier[readyState]]]]]',
        'st:If[ex:Unary[! ex:Identifier[H]]]',
        'st:Return[ex:Call[ex:Member[ex:Identifier[H] >>> ex:Identifier[promise]](ex:Identifier[b])]]',
        'st:Try-Catch[pr:Identifier[d]]',
      ],
    },

    matchedFns: [
      { name: 'jquery', version: '1.11.2', file: '0001.json', index: 459, targetVersion: true },
    ],
    misMatchedFns: [
      { name: 'jquery', version: '1.12.0', file: '0001.json', index: 456, reason: r.min },
    ],
  },
  {
    comments: ['jquery@2.1.1', 'file is minified'],
    shouldSkip: true,
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 153,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:send',
      loc: { start: { line: 4, column: 14308 }, end: { line: 4, column: 15010 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ForInStatement',
        't_st:IfStatement',
        't_st:TryStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[e]]',
        'de:Variable[pr:Identifier[f] = ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[xhr]]()]]',
        'de:Variable[pr:Identifier[g] = ex:Update[++ex:Identifier[Cc]]]',
        'ex:Assignment[pr:Member[ex:Identifier[f] >c> ex:Identifier[e]] = ex:Member[ex:Member[ex:Identifier[a] >>> ex:Identifier[xhrFields]] >c> ex:Identifier[e]]]',
        'ex:Call[ex:Member[ex:Identifier[f] >>> ex:Identifier[send]](ex:Logical[ex:Logical[ex:Member[ex:Identifier[a] >>> ex:Identifier[hasContent]] && ex:Member[ex:Identifier[a] >>> ex:Identifier[data]]] || lt:Null])]',
        'ex:Call[ex:Member[ex:Identifier[f] >>> ex:Identifier[setRequestHeader]](ex:Identifier[e], ex:Member[ex:Identifier[c] >c> ex:Identifier[e]])]',
        'ex:Identifier[c]',
        'ex:Member[ex:Identifier[a] >>> ex:Identifier[xhrFields]]',
        'ex:Sequence[ex:Assignment[pr:Identifier[b] = ex:Function[anonymous]], ex:Assignment[pr:Member[ex:Identifier[f] >>> ex:Identifier[onload]] = ex:Call[ex:Identifier[b]()]], ex:Assignment[pr:Member[ex:Identifier[f] >>> ex:Identifier[onerror]] = ex:Call[ex:Identifier[b](lt:String)]], ex:Assignment[pr:Identifier[b] = ex:Assignment[pr:Member[ex:Identifier[Dc] >c> ex:Identifier[g]] = ex:Call[ex:Identifier[b](lt:String)]]]]',
        'ex:Sequence[ex:Logical[ex:Logical[ex:Member[ex:Identifier[a] >>> ex:Identifier[mimeType]] && ex:Member[ex:Identifier[f] >>> ex:Identifier[overrideMimeType]]] && ex:Call[ex:Member[ex:Identifier[f] >>> ex:Identifier[overrideMimeType]](ex:Member[ex:Identifier[a] >>> ex:Identifier[mimeType]])]], ex:Logical[ex:Logical[ex:Member[ex:Identifier[a] >>> ex:Identifier[crossDomain]] || ex:Member[ex:Identifier[c] >c> lt:String]] || ex:Assignment[pr:Member[ex:Identifier[c] >c> lt:String] = lt:String]]]',
        'pr:Identifier[c]',
        'pr:Identifier[d]',
        'pr:Identifier[e]',
        'pr:Identifier[e]',
        'st:For-In',
        'st:For-In',
        'st:If[ex:Identifier[b]]',
        'st:If[ex:Sequence[ex:Call[ex:Member[ex:Identifier[f] >>> ex:Identifier[open]](ex:Member[ex:Identifier[a] >>> ex:Identifier[type]], ex:Member[ex:Identifier[a] >>> ex:Identifier[url]], ex:Member[ex:Identifier[a] >>> ex:Identifier[async]], ex:Member[ex:Identifier[a] >>> ex:Identifier[username]], ex:Member[ex:Identifier[a] >>> ex:Identifier[password]])], ex:Member[ex:Identifier[a] >>> ex:Identifier[xhrFields]]]]',
        'st:Throw[ex:Identifier[h]]',
        'st:Try-Catch[pr:Identifier[h]]',
      ],
    },

    matchedFns: [
      {
        name: 'jquery',
        version: '2.1.1',
        file: '0001.json',
        index: 153,
        targetVersion: true,
        loc: { start: { line: 4, column: 14308 }, end: { line: 4, column: 15010 } },
      },
      { name: 'jquery', version: '2.1.2', file: '0001.json', index: 152 },
      { name: 'jquery', version: '2.1.3', file: '0001.json', index: 152 },
      { name: 'jquery', version: '2.1.4', file: '0001.json', index: 152 },
    ],
    misMatchedFns: [
      { name: 'jquery', version: '1.12.4', file: '0001.json', index: 169, reason: r.mod },
      { name: 'jquery', version: '2.1.0', file: '0001.json', index: 153, reason: r.mod },
      { name: 'jquery', version: '2.2.0', file: '0001.json', index: 163, reason: r.mod },
    ],
  },

  /* 2nd group */
  {
    comments: ['jquery@1.11.2', 'this is minified file'],
    shouldSkip: true,
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 510,
      type: 'fn',
      name: '[anonymous]:>>:setup:>>:[anonymous]',
      loc: { start: { line: 3, column: 13676 }, end: { line: 3, column: 13923 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[b] = ex:Member[ex:Identifier[a] >>> ex:Identifier[target]]]',
        'ex:Logical[ex:Logical[ex:Call[ex:Member[ex:Identifier[X] >>> ex:Identifier[test]](ex:Member[ex:Identifier[b] >>> ex:Identifier[nodeName]])] && ex:Unary[! ex:Call[ex:Member[ex:Identifier[m] >>> ex:Identifier[_data]](ex:Identifier[b], lt:String)]]] && ex:Sequence[ex:Call[ex:Member[ex:Member[ex:Identifier[m] >>> ex:Identifier[event]] >>> ex:Identifier[add]](ex:Identifier[b], lt:String, ex:Function[anonymous])], ex:Call[ex:Member[ex:Identifier[m] >>> ex:Identifier[_data]](ex:Identifier[b], lt:String, ex:Unary[! lt:Numeric])]]]',
        'pr:Identifier[a]',
      ],
    },

    matchedFns: [
      { name: 'jquery', version: '1.11.0', file: '0001.json', index: 519 },
      {
        name: 'jquery',
        version: '1.11.2',
        file: '0001.json',
        index: 510,
        targetVersion: true,
        loc: { start: { line: 3, column: 13676 }, end: { line: 3, column: 13923 } },
      },
      { name: 'jquery', version: '1.11.3', file: '0001.json', index: 510 },
    ],
    misMatchedFns: [],
  },
  {
    comments: ['bluebird@3.4.6'],
    shouldSkip: true,
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 132,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:exports:>>:_ensurePossibleRejectionHandled',
      loc: { start: { line: 29, column: 14947 }, end: { line: 29, column: 15079 } },
      fnStatementTypes: ['t_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Logical[ex:Binary[lt:Numeric === ex:Binary[lt:Numeric & ex:Member[ex:This >>> ex:Identifier[_bitField]]]] && ex:Sequence[ex:Call[ex:Member[ex:This >>> ex:Identifier[_setRejectionIsUnhandled]]()], ex:Call[ex:Member[ex:Identifier[I] >>> ex:Identifier[invokeLater]](ex:Member[ex:This >>> ex:Identifier[_notifyUnhandledRejection]], ex:This, ex:Unary[void lt:Numeric])]]]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0', 'minified'],
    shouldSkip: true,
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 867,
      type: 'fn',
      name: '[anonymous]:>>:replace',
      loc: { start: { line: 177, column: 461 }, end: { line: 177, column: 502 } },
      fnStatementTypes: ['t_st:ExpressionStatement', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[$$replace]] = ex:Unary[! lt:Numeric]]',
        'st:Return[ex:This]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.1', 'minified'],
    shouldSkip: true,
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.aq_com.az',
      app: 'com.atv.freeanemia-1-2015_04_06.apk',
    },
    file: { path: 'body/0002', location: 'body', id: '0002' },
    signature: {
      index: 480,
      type: 'fn',
      name: '[anonymous]:>>:removeAttr',
      loc: { start: { line: 4, column: 9872 }, end: { line: 4, column: 9935 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[a]',
        'st:Return[ex:Call[ex:Member[ex:This >>> ex:Identifier[each]](ex:Function[anonymous])]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.2', 'minified'],
    shouldSkip: true,
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 66,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:[anonymous]',
      loc: { start: { line: 3, column: 4360 }, end: { line: 3, column: 4389 } },
      fnStatementTypes: ['t_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Member[ex:Identifier[k] >>> ex:Identifier[noCloneEvent]] = ex:Unary[! lt:Numeric]]',
      ],
    },
  },

  /* 3rd group */
  {
    comments: ['angular@1.3.0', 'minified'],
    shouldSkip: true,
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 670,
      type: 'fn',
      name: '[anonymous]:>>:Ke:>>:digestTtl',
      loc: { start: { line: 114, column: 428 }, end: { line: 114, column: 473 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'ex:Logical[ex:Member[ex:Identifier[arguments] >>> ex:Identifier[length]] && ex:Assignment[pr:Identifier[b] = ex:Identifier[a]]]',
        'pr:Identifier[a]',
        'st:Return[ex:Identifier[b]]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0', 'minified'],
    shouldSkip: true,
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 737,
      type: 'fn',
      name: '[anonymous]:>>:Ne:>>:[anonymous]:>>:[anonymous]:>>:[anonymous]',
      loc: { start: { line: 132, column: 25 }, end: { line: 132, column: 51 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[b]',
        'st:Return[ex:Call[ex:Identifier[k](ex:Identifier[a], ex:Identifier[b])]]',
      ],
    },
  },
  {
    comments: ['angular@1.3.0', 'minified'],
    shouldSkip: true,
    app: { type: 'cordova' as APP_TYPES.cordova, section: 'random', app: 'Snowbuddy-1.2.8.apk' },
    file: { path: 'body/0001', location: 'body', id: '0001' },
    signature: {
      index: 710,
      type: 'fn',
      name: '[anonymous]:>>:md:>>:$setUntouched:>>:[anonymous]',
      loc: { start: { line: 150, column: 205 }, end: { line: 150, column: 235 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Member[ex:Identifier[a] >>> ex:Identifier[$setUntouched]]()]',
        'pr:Identifier[a]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.2', 'minified'],
    shouldSkip: true,
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 560,
      type: 'fn',
      name: '[anonymous]:>>:unbind',
      loc: { start: { line: 4, column: 15538 }, end: { line: 4, column: 15578 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[a]',
        'pr:Identifier[b]',
        'st:Return[ex:Call[ex:Member[ex:This >>> ex:Identifier[off]](ex:Identifier[a], lt:Null, ex:Identifier[b])]]',
      ],
    },
  },
  {
    comments: ['jquery@1.11.2', 'minified'],
    shouldSkip: true,
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tomatopie.stickermix8-10-2015_03_12.apk',
    },
    file: { path: 'head/0003', location: 'head', id: '0003' },
    signature: {
      index: 398,
      type: 'fn',
      name: '[anonymous]:>>:Lb',
      loc: { start: { line: 3, column: 25486 }, end: { line: 3, column: 25613 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[a]',
        'pr:Identifier[b]',
        'st:Return[ex:Object[ex:Identifier[get] : ex:Function[anonymous]]]',
      ],
    },
  },

  /* 4th group */
  /* 5th group */
  /* 6th group */
  /* 7th group */
  /* 8th group */
  /* 9th group */
  /* 10th group */
  /* 11th group */
]

export const data: AppFunction[] = [
  /* 1st group */
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 1517,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:renderUnknownOption',
      loc: { start: { line: 41271, column: 29 }, end: { line: 41276, column: 3 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[unknownVal] = ex:Binary[ex:Binary[lt:String + ex:Call[ex:Identifier[hashKey](ex:Identifier[val])]] + lt:String]]',
        'ex:Call[ex:Member[ex:Identifier[$element] >>> ex:Identifier[prepend]](ex:Member[ex:Identifier[self] >>> ex:Identifier[unknownOption]])]',
        'ex:Call[ex:Member[ex:Identifier[$element] >>> ex:Identifier[val]](ex:Identifier[unknownVal])]',
        'ex:Call[ex:Member[ex:Member[ex:Identifier[self] >>> ex:Identifier[unknownOption]] >>> ex:Identifier[val]](ex:Identifier[unknownVal])]',
        'pr:Identifier[val]',
      ],
    },

    matchedFns: [
      { name: 'angular', version: '1.4.0', file: '0000.json', index: 217 },
      { name: 'angular', version: '1.4.3', file: '0000.json', index: 217, targetVersion: true },
      { name: 'angular', version: '1.5.9', file: '0000.json', index: 229 },
    ],
    misMatchedFns: [
      { name: 'angular', version: '1.3.20', file: '0000.json', index: 69, reason: r.mod },
      { name: 'angular', version: '1.6.0', file: '0000.json', index: 194, reason: r.mod },
      { name: 'angular', version: '1.6.1', file: '0000.json', index: 194, reason: r.mod },
    ],
  },
  {
    comments: [
      'jquery@1.9.0 or sizzle.js',
      'jquery@1.9.0 is not in the db',
      'jquery@1.8.2 - this function is different by unused parameter declared in fn arguments',
      'jquery@1.8.3 - this function is different by unused parameter declared in fn arguments',
    ],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'net.jp.apps.noboruhirohara.yakei-102008-2016_05_02.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 4391,
      type: 'fn',
      name: '[anonymous]:>>:winnow:>>:[anonymous]',
      loc: { start: { line: 7214, column: 31 }, end: { line: 7216, column: 3 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[elem]',
        'st:Return[ex:Binary[ex:Binary[ex:Identifier[elem] === ex:Identifier[qualifier]] === ex:Identifier[keep]]]',
      ],
    },

    matchedFns: [{ name: 'jquery', version: '1.9.1', file: '0000.json', index: 568 }],
    misMatchedFns: [
      { name: 'jquery', version: '1.8.2', file: '0000.json', index: 561, reason: r.mod },
      { name: 'jquery', version: '1.8.3', file: '0000.json', index: 560, reason: r.mod },
      { name: 'jquery', version: '1.11.0', file: '0000.json', index: 590, reason: r.mod },
      { name: 'jquery', version: '1.12.0', file: '0000.json', index: 601, reason: r.mod },
    ],
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 3286,
      type: 'fn',
      name: '[anonymous]:>>:primary',
      loc: { start: { line: 27261, column: 11 }, end: { line: 27297, column: 3 } },
      fnStatementTypes: [
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
        't_st:WhileStatement',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[next]]',
        'de:Variable[pr:Identifier[primary]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Call[ex:Identifier[copy](ex:Member[ex:Member[ex:This >>> ex:Identifier[selfReferential]] >c> ex:Member[ex:Call[ex:Member[ex:This >>> ex:Identifier[consume]]()] >>> ex:Identifier[text]]])]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Call[ex:Member[ex:This >>> ex:Identifier[arrayDeclaration]]()]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Call[ex:Member[ex:This >>> ex:Identifier[constant]]()]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Call[ex:Member[ex:This >>> ex:Identifier[filterChain]]()]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Call[ex:Member[ex:This >>> ex:Identifier[identifier]]()]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Call[ex:Member[ex:This >>> ex:Identifier[object]]()]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Object[ex:Identifier[type] : ex:Member[ex:Identifier[AST] >>> ex:Identifier[CallExpression]], ex:Identifier[callee] : ex:Identifier[primary], ex:Identifier[arguments] : ex:Call[ex:Member[ex:This >>> ex:Identifier[parseArguments]]()]]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Object[ex:Identifier[type] : ex:Member[ex:Identifier[AST] >>> ex:Identifier[Literal]], ex:Identifier[value] : ex:Member[ex:Member[ex:Member[ex:This >>> ex:Identifier[options]] >>> ex:Identifier[literals]] >c> ex:Member[ex:Call[ex:Member[ex:This >>> ex:Identifier[consume]]()] >>> ex:Identifier[text]]]]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Object[ex:Identifier[type] : ex:Member[ex:Identifier[AST] >>> ex:Identifier[MemberExpression]], ex:Identifier[object] : ex:Identifier[primary], ex:Identifier[property] : ex:Call[ex:Member[ex:This >>> ex:Identifier[expression]]()], ex:Identifier[computed] : lt:Boolean]]',
        'ex:Assignment[pr:Identifier[primary] = ex:Object[ex:Identifier[type] : ex:Member[ex:Identifier[AST] >>> ex:Identifier[MemberExpression]], ex:Identifier[object] : ex:Identifier[primary], ex:Identifier[property] : ex:Call[ex:Member[ex:This >>> ex:Identifier[identifier]]()], ex:Identifier[computed] : lt:Boolean]]',
        'ex:Call[ex:Member[ex:This >>> ex:Identifier[consume]](lt:String)]',
        'ex:Call[ex:Member[ex:This >>> ex:Identifier[consume]](lt:String)]',
        'ex:Call[ex:Member[ex:This >>> ex:Identifier[consume]](lt:String)]',
        'ex:Call[ex:Member[ex:This >>> ex:Identifier[throwError]](lt:String)]',
        'ex:Call[ex:Member[ex:This >>> ex:Identifier[throwError]](lt:String, ex:Call[ex:Member[ex:This >>> ex:Identifier[peek]]()])]',
        'st:Else',
        'st:Else',
        'st:Else-If[ex:Binary[ex:Member[ex:Identifier[next] >>> ex:Identifier[text]] === lt:String]]',
        'st:Else-If[ex:Binary[ex:Member[ex:Identifier[next] >>> ex:Identifier[text]] === lt:String]]',
        'st:Else-If[ex:Call[ex:Member[ex:Member[ex:Member[ex:This >>> ex:Identifier[options]] >>> ex:Identifier[literals]] >>> ex:Identifier[hasOwnProperty]](ex:Member[ex:Call[ex:Member[ex:This >>> ex:Identifier[peek]]()] >>> ex:Identifier[text]])]]',
        'st:Else-If[ex:Call[ex:Member[ex:Member[ex:This >>> ex:Identifier[selfReferential]] >>> ex:Identifier[hasOwnProperty]](ex:Member[ex:Call[ex:Member[ex:This >>> ex:Identifier[peek]]()] >>> ex:Identifier[text]])]]',
        'st:Else-If[ex:Call[ex:Member[ex:This >>> ex:Identifier[expect]](lt:String)]]',
        'st:Else-If[ex:Call[ex:Member[ex:This >>> ex:Identifier[expect]](lt:String)]]',
        'st:Else-If[ex:Member[ex:Call[ex:Member[ex:This >>> ex:Identifier[peek]]()] >>> ex:Identifier[constant]]]',
        'st:Else-If[ex:Member[ex:Call[ex:Member[ex:This >>> ex:Identifier[peek]]()] >>> ex:Identifier[identifier]]]',
        'st:If[ex:Binary[ex:Member[ex:Identifier[next] >>> ex:Identifier[text]] === lt:String]]',
        'st:If[ex:Call[ex:Member[ex:This >>> ex:Identifier[expect]](lt:String)]]',
        'st:Return[ex:Identifier[primary]]',
        'st:While[ex:Assignment[pr:Identifier[next] = ex:Call[ex:Member[ex:This >>> ex:Identifier[expect]](lt:String, lt:String, lt:String)]]]',
      ],
    },

    matchedFns: [
      { name: 'angular', version: '1.5.1', file: '0000.json', index: 1236 },
      { name: 'angular', version: '1.5.2', file: '0000.json', index: 1236 },
      {
        name: 'angular',
        version: '1.5.3',
        file: '0000.json',
        index: 1243,
        targetVersion: true,
        loc: { start: { line: 13891, column: 11 }, end: { line: 13927, column: 3 } },
      },
      { name: 'angular', version: '1.5.5', file: '0000.json', index: 1256 },
      { name: 'angular', version: '1.5.6', file: '0000.json', index: 1257 },
      { name: 'angular', version: '1.5.10', file: '0000.json', index: 1285 },
      { name: 'angular', version: '1.5.11', file: '0000.json', index: 1286 },
      { name: 'angular', version: '1.6.0', file: '0000.json', index: 1288 },
      { name: 'angular', version: '1.6.10', file: '0000.json', index: 1329 },
      { name: 'angular', version: '1.7.0-rc.0', file: '0000.json', index: 1322 },
    ],
    misMatchedFns: [
      { name: 'angular', version: '1.5.0', file: '0000.json', index: 1233, reason: r.mod },
    ],
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 2043,
      type: 'fn',
      name: '[anonymous]:>>:$CompileProvider:>>:[anonymous]:>>:markDirectivesAsIsolate',
      loc: { start: { line: 21494, column: 4 }, end: { line: 21499, column: 5 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ForStatement'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[j] = lt:Numeric]',
        'de:Variable[pr:Identifier[jj] = ex:Member[ex:Identifier[directives] >>> ex:Identifier[length]]]',
        'ex:Assignment[pr:Member[ex:Identifier[directives] >c> ex:Identifier[j]] = ex:Call[ex:Identifier[inherit](ex:Member[ex:Identifier[directives] >c> ex:Identifier[j]], ex:Object[ex:Identifier[$$isolateScope] : lt:Boolean])]]',
        'ex:Binary[ex:Identifier[j] < ex:Identifier[jj]]',
        'ex:Update[ex:Identifier[j]++]',
        'pr:Identifier[directives]',
        'st:For',
      ],
    },

    matchedFns: [
      { name: 'angular', version: '1.2.27', file: '0000.json', index: 271 },
      { name: 'angular', version: '1.2.30', file: '0000.json', index: 271 },
      { name: 'angular', version: '1.2.32', file: '0000.json', index: 271 },
      { name: 'angular', version: '1.3.0', file: '0000.json', index: 344 },
      { name: 'angular', version: '1.3.10', file: '0000.json', index: 360 },
      { name: 'angular', version: '1.3.20', file: '0000.json', index: 363 },
      { name: 'angular', version: '1.4.0', file: '0000.json', index: 368 },
      { name: 'angular', version: '1.4.3', file: '0000.json', index: 369, targetVersion: true },
      { name: 'angular', version: '1.4.4', file: '0000.json', index: 372 },
      { name: 'angular', version: '1.4.7', file: '0000.json', index: 371 },
    ],
    misMatchedFns: [
      { name: 'angular', version: '1.4.8', file: '0000.json', index: 372, reason: r.mod },
      { name: 'angular', version: '1.4.10', file: '0000.json', index: 402, reason: r.mod },
      { name: 'angular', version: '1.5.3', file: '0000.json', index: 418, reason: r.mod },
    ],
  },
  {
    comments: ['underscore@1.7.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 7650,
      type: 'fn',
      name: '[anonymous]:>>:values',
      loc: { start: { line: 29221, column: 13 }, end: { line: 29229, column: 3 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_st:ForStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[i] = lt:Numeric]',
        'de:Variable[pr:Identifier[keys] = ex:Call[ex:Member[ex:Identifier[_] >>> ex:Identifier[keys]](ex:Identifier[obj])]]',
        'de:Variable[pr:Identifier[length] = ex:Member[ex:Identifier[keys] >>> ex:Identifier[length]]]',
        'de:Variable[pr:Identifier[values] = ex:Call[ex:Identifier[Array](ex:Identifier[length])]]',
        'ex:Assignment[pr:Member[ex:Identifier[values] >c> ex:Identifier[i]] = ex:Member[ex:Identifier[obj] >c> ex:Member[ex:Identifier[keys] >c> ex:Identifier[i]]]]',
        'ex:Binary[ex:Identifier[i] < ex:Identifier[length]]',
        'ex:Update[ex:Identifier[i]++]',
        'pr:Identifier[obj]',
        'st:For',
        'st:Return[ex:Identifier[values]]',
      ],
    },

    matchedFns: [
      {
        name: 'underscore',
        version: '1.7.0',
        file: '0000.json',
        index: 145,
        targetVersion: true,
        loc: { start: { line: 857, column: 13 }, end: { line: 865, column: 3 } },
      },
      { name: 'underscore', version: '1.8.0', file: '0000.json', index: 160 },
      { name: 'underscore', version: '1.8.3', file: '0000.json', index: 162 },
    ],
    misMatchedFns: [
      { name: 'underscore', version: '1.6.0', file: '0000.json', index: 152, reason: r.mod },
    ],
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 1413,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:ngModelCompile:>>:ngModelPostLink:>>:[anonymous]',
      loc: { start: { line: 38690, column: 52 }, end: { line: 38692, column: 13 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Member[ex:Identifier[modelCtrl] >>> ex:Identifier[$$debounceViewValueCommit]](ex:Logical[ex:Identifier[ev] && ex:Member[ex:Identifier[ev] >>> ex:Identifier[type]]])]',
        'pr:Identifier[ev]',
      ],
    },

    matchedFns: [
      { name: 'angular', version: '1.3.0-rc.5', file: '0000.json', index: 950 },
      { name: 'angular', version: '1.3.0', file: '0000.json', index: 960 },
      { name: 'angular', version: '1.3.20', file: '0000.json', index: 197 },
      {
        name: 'angular',
        version: '1.4.3',
        file: '0000.json',
        index: 179,
        targetVersion: true,
        loc: { start: { line: 25378, column: 52 }, end: { line: 25380, column: 13 } },
      },
      { name: 'angular', version: '1.5.0', file: '0000.json', index: 156 },
      { name: 'angular', version: '1.5.6', file: '0000.json', index: 157 },
      { name: 'angular', version: '1.6.0', file: '0000.json', index: 123 },
      { name: 'angular', version: '1.6.5', file: '0000.json', index: 128 },
      { name: 'angular', version: '1.6.7', file: '0000.json', index: 129 },
    ],
    misMatchedFns: [
      { name: 'angular', version: '1.2.32', file: '0000.json', reason: r.not },
      { name: 'angular', version: '1.6.8', file: '0000.json', index: 326, reason: r.mod },
      { name: 'angular', version: '1.6.10', file: '0000.json', index: 326, reason: r.mod },
      { name: 'angular', version: '1.7.0-rc.0', file: '0000.json', index: 328, reason: r.mod },
    ],
  },
  {
    comments: ['underscore@1.7.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 6870,
      type: 'fn',
      name: '[anonymous]:>>:pick',
      loc: { start: { line: 29278, column: 11 }, end: { line: 29296, column: 3 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[i] = lt:Numeric]',
        'de:Variable[pr:Identifier[key]]',
        'de:Variable[pr:Identifier[keys] = ex:Call[ex:Member[ex:Identifier[concat] >>> ex:Identifier[apply]](ex:Array, ex:Call[ex:Member[ex:Identifier[slice] >>> ex:Identifier[call]](ex:Identifier[arguments], lt:Numeric)])]]',
        'de:Variable[pr:Identifier[length] = ex:Member[ex:Identifier[keys] >>> ex:Identifier[length]]]',
        'de:Variable[pr:Identifier[result] = ex:Object]',
        'de:Variable[pr:Identifier[value] = ex:Member[ex:Identifier[obj] >c> ex:Identifier[key]]]',
        'ex:Assignment[pr:Identifier[iteratee] = ex:Call[ex:Identifier[createCallback](ex:Identifier[iteratee], ex:Identifier[context])]]',
        'ex:Assignment[pr:Identifier[key] = ex:Member[ex:Identifier[keys] >c> ex:Identifier[i]]]',
        'ex:Assignment[pr:Identifier[obj] = ex:New[ex:Identifier[Object](ex:Identifier[obj])]]',
        'ex:Assignment[pr:Member[ex:Identifier[result] >c> ex:Identifier[key]] = ex:Identifier[value]]',
        'ex:Assignment[pr:Member[ex:Identifier[result] >c> ex:Identifier[key]] = ex:Member[ex:Identifier[obj] >c> ex:Identifier[key]]]',
        'ex:Binary[ex:Identifier[i] < ex:Identifier[length]]',
        'ex:Identifier[obj]',
        'ex:Update[ex:Identifier[i]++]',
        'pr:Identifier[context]',
        'pr:Identifier[iteratee]',
        'pr:Identifier[key]',
        'pr:Identifier[obj]',
        'st:Else',
        'st:For',
        'st:For-In',
        'st:If[ex:Binary[ex:Identifier[key] in ex:Identifier[obj]]]',
        'st:If[ex:Binary[ex:Identifier[obj] == lt:Null]]',
        'st:If[ex:Call[ex:Identifier[iteratee](ex:Identifier[value], ex:Identifier[key], ex:Identifier[obj])]]',
        'st:If[ex:Call[ex:Member[ex:Identifier[_] >>> ex:Identifier[isFunction]](ex:Identifier[iteratee])]]',
        'st:Return[ex:Identifier[result]]',
        'st:Return[ex:Identifier[result]]',
      ],
    },

    matchedFns: [
      {
        name: 'underscore',
        version: '1.7.0',
        file: '0000.json',
        index: 113,
        targetVersion: true,
        loc: { start: { line: 914, column: 11 }, end: { line: 932, column: 3 } },
      },
    ],
    misMatchedFns: [
      { name: 'underscore', version: '1.6.0', file: '0000.json', index: 115, reason: r.mod },
      { name: 'underscore', version: '1.8.0', file: '0000.json', index: 123, reason: r.mod },
    ],
  },

  /* 2nd group */
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 3084,
      type: 'fn',
      name: '[anonymous]:>>:jqLiteEmpty',
      loc: { start: { line: 16460, column: 0 }, end: { line: 16465, column: 1 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement', 't_st:WhileStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Identifier[jqLiteDealoc](ex:Identifier[element], lt:Boolean)]',
        'ex:Call[ex:Member[ex:Identifier[element] >>> ex:Identifier[removeChild]](ex:Member[ex:Identifier[element] >>> ex:Identifier[firstChild]])]',
        'pr:Identifier[element]',
        'st:While[ex:Member[ex:Identifier[element] >>> ex:Identifier[firstChild]]]',
      ],
    },

    matchedFns: [
      { name: 'angular', version: '1.3.0', file: '0000.json', index: 884 },
      { name: 'angular', version: '1.4.0', file: '0000.json', index: 996 },
      { name: 'angular', version: '1.5.0', file: '0000.json', index: 1078 },
      {
        name: 'angular',
        version: '1.5.3',
        file: '0000.json',
        index: 1088,
        targetVersion: true,
        loc: { start: { line: 3090, column: 0 }, end: { line: 3095, column: 1 } },
      },
      { name: 'angular', version: '1.6.0', file: '0000.json', index: 1123 },
      { name: 'angular', version: '1.6.1', file: '0000.json', index: 1126 },
      { name: 'angular', version: '1.6.10', file: '0000.json', index: 1160 },
      { name: 'angular', version: '1.7.0-rc.0', file: '0000.json', index: 1157 },
    ],
    misMatchedFns: [
      { name: 'angular', version: '1.2.27', file: '0000.json', index: 722, reason: r.mod },
      { name: 'angular', version: '1.2.30', file: '0000.json', index: 724, reason: r.mod },
      { name: 'angular', version: '1.2.32', file: '0000.json', index: 724, reason: r.mod },
    ],
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 2705,
      type: 'fn',
      name: '[anonymous]:>>:classDirective:>>:[anonymous]:>>:link:>>:ngClassWatchAction',
      loc: { start: { line: 37293, column: 8 }, end: { line: 37304, column: 9 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:ExpressionStatement', 't_st:IfStatement'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[newClasses] = ex:Call[ex:Identifier[arrayClasses](ex:Logical[ex:Identifier[newVal] || ex:Array])]]',
        'de:Variable[pr:Identifier[oldClasses] = ex:Call[ex:Identifier[arrayClasses](ex:Identifier[oldVal])]]',
        'ex:Assignment[pr:Identifier[oldVal] = ex:Call[ex:Identifier[shallowCopy](ex:Identifier[newVal])]]',
        'ex:Call[ex:Identifier[addClasses](ex:Identifier[newClasses])]',
        'ex:Call[ex:Identifier[updateClasses](ex:Identifier[oldClasses], ex:Identifier[newClasses])]',
        'pr:Identifier[newVal]',
        'st:Else-If[ex:Unary[! ex:Call[ex:Identifier[equals](ex:Identifier[newVal], ex:Identifier[oldVal])]]]',
        'st:If[ex:Logical[ex:Binary[ex:Identifier[selector] === lt:Boolean] || ex:Binary[ex:Binary[ex:Member[ex:Identifier[scope] >>> ex:Identifier[$index]] % lt:Numeric] === ex:Identifier[selector]]]]',
        'st:If[ex:Unary[! ex:Identifier[oldVal]]]',
      ],
    },

    matchedFns: [
      {
        name: 'angular',
        version: '1.5.3',
        file: '0000.json',
        index: 820,
        targetVersion: true,
        loc: { start: { line: 23923, column: 8 }, end: { line: 23934, column: 9 } },
      },
    ],
    misMatchedFns: [
      { name: 'angular', version: '1.6.0', file: '0000.json', index: 862, reason: r.mod },
    ],
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 5046,
      type: 'fn',
      name:
        '[anonymous]:>>:$CompileProvider:>>:[anonymous]:>>:addAttrInterpolateDirective:>>:compile:>>:attrInterpolatePreLinkFn',
      loc: { start: { line: 8507, column: 19 }, end: { line: 8550, column: 15 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[$$observers] = ex:Logical[ex:Member[ex:Identifier[attr] >>> ex:Identifier[$$observers]] || ex:Assignment[pr:Member[ex:Identifier[attr] >>> ex:Identifier[$$observers]] = ex:Object]]]',
        'de:Variable[pr:Identifier[newValue] = ex:Member[ex:Identifier[attr] >c> ex:Identifier[name]]]',
        'ex:Assignment[pr:Identifier[interpolateFn] = ex:Logical[ex:Identifier[newValue] && ex:Call[ex:Identifier[$interpolate](ex:Identifier[newValue], lt:Boolean, ex:Identifier[trustedContext], ex:Identifier[allOrNothing])]]]',
        'ex:Assignment[pr:Identifier[value] = ex:Identifier[newValue]]',
        'ex:Assignment[pr:Member[ex:Identifier[attr] >c> ex:Identifier[name]] = ex:Call[ex:Identifier[interpolateFn](ex:Identifier[scope])]]',
        'ex:Assignment[pr:Member[ex:Logical[ex:Member[ex:Identifier[$$observers] >c> ex:Identifier[name]] || ex:Assignment[pr:Member[ex:Identifier[$$observers] >c> ex:Identifier[name]] = ex:Array]] >>> ex:Identifier[$$inter]] = lt:Boolean]',
        'ex:Call[ex:Member[ex:Logical[ex:Logical[ex:Member[ex:Identifier[attr] >>> ex:Identifier[$$observers]] && ex:Member[ex:Member[ex:Member[ex:Identifier[attr] >>> ex:Identifier[$$observers]] >c> ex:Identifier[name]] >>> ex:Identifier[$$scope]]] || ex:Identifier[scope]] >>> ex:Identifier[$watch]](ex:Identifier[interpolateFn], ex:Function[ex:Identifier[interpolateFnWatchAction]])]',
        'pr:Identifier[attr]',
        'pr:Identifier[element]',
        'pr:Identifier[scope]',
        'st:If[ex:Binary[ex:Identifier[newValue] !== ex:Identifier[value]]]',
        'st:If[ex:Call[ex:Member[ex:Identifier[EVENT_HANDLER_ATTR_REGEXP] >>> ex:Identifier[test]](ex:Identifier[name])]]',
        'st:If[ex:Unary[! ex:Identifier[interpolateFn]]]',
        'st:Return',
        'st:Throw[ex:Call[ex:Identifier[$compileMinErr](lt:String, ex:Binary[lt:String + lt:String])]]',
      ],
    },

    matchedFns: [
      {
        name: 'angular',
        version: '1.4.3',
        file: '0000.json',
        index: 321,
        targetVersion: true,
        loc: { start: { line: 8507, column: 19 }, end: { line: 8550, column: 15 } },
      },
    ],
    misMatchedFns: [
      { name: 'angular', version: '1.6.3', file: '0000.json', index: 369, reason: r.mod },
    ],
  },
  {
    comments: ['jquery@2.2.2'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 5543,
      type: 'fn',
      name: '[anonymous]:>>:add',
      loc: { start: { line: 65012, column: 6 }, end: { line: 65118, column: 2 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ExpressionStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:IfStatement',
        't_st:VariableDeclaration',
        't_st:WhileStatement',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[elemData] = ex:Call[ex:Member[ex:Identifier[dataPriv] >>> ex:Identifier[get]](ex:Identifier[elem])]]',
        'de:Variable[pr:Identifier[eventHandle]]',
        'de:Variable[pr:Identifier[events]]',
        'de:Variable[pr:Identifier[handleObjIn]]',
        'de:Variable[pr:Identifier[handleObj]]',
        'de:Variable[pr:Identifier[handlers]]',
        'de:Variable[pr:Identifier[namespaces]]',
        'de:Variable[pr:Identifier[origType]]',
        'de:Variable[pr:Identifier[special]]',
        'de:Variable[pr:Identifier[t]]',
        'de:Variable[pr:Identifier[tmp]]',
        'de:Variable[pr:Identifier[type]]',
        'ex:Assignment[pr:Identifier[eventHandle] = ex:Assignment[pr:Member[ex:Identifier[elemData] >>> ex:Identifier[handle]] = ex:Function[anonymous]]]',
        'ex:Assignment[pr:Identifier[events] = ex:Assignment[pr:Member[ex:Identifier[elemData] >>> ex:Identifier[events]] = ex:Object]]',
        'ex:Assignment[pr:Identifier[handleObjIn] = ex:Identifier[handler]]',
        'ex:Assignment[pr:Identifier[handleObj] = ex:Call[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[extend]](ex:Object[ex:Identifier[type] : ex:Identifier[type], ex:Identifier[origType] : ex:Identifier[origType], ex:Identifier[data] : ex:Identifier[data], ex:Identifier[handler] : ex:Identifier[handler], ex:Identifier[guid] : ex:Member[ex:Identifier[handler] >>> ex:Identifier[guid]], ex:Identifier[selector] : ex:Identifier[selector], ex:Identifier[needsContext] : ex:Logical[ex:Identifier[selector] && ex:Call[ex:Member[ex:Member[ex:Member[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[expr]] >>> ex:Identifier[match]] >>> ex:Identifier[needsContext]] >>> ex:Identifier[test]](ex:Identifier[selector])]], ex:Identifier[namespace] : ex:Call[ex:Member[ex:Identifier[namespaces] >>> ex:Identifier[join]](lt:String)]], ex:Identifier[handleObjIn])]]',
        'ex:Assignment[pr:Identifier[handler] = ex:Member[ex:Identifier[handleObjIn] >>> ex:Identifier[handler]]]',
        'ex:Assignment[pr:Identifier[handlers] = ex:Assignment[pr:Member[ex:Identifier[events] >c> ex:Identifier[type]] = ex:Array]]',
        'ex:Assignment[pr:Identifier[namespaces] = ex:Call[ex:Member[ex:Call[ex:Member[ex:Logical[ex:Member[ex:Identifier[tmp] >c> lt:Numeric] || lt:String] >>> ex:Identifier[split]](lt:String)] >>> ex:Identifier[sort]]()]]',
        'ex:Assignment[pr:Identifier[selector] = ex:Member[ex:Identifier[handleObjIn] >>> ex:Identifier[selector]]]',
        'ex:Assignment[pr:Identifier[special] = ex:Logical[ex:Member[ex:Member[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[event]] >>> ex:Identifier[special]] >c> ex:Identifier[type]] || ex:Object]]',
        'ex:Assignment[pr:Identifier[special] = ex:Logical[ex:Member[ex:Member[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[event]] >>> ex:Identifier[special]] >c> ex:Identifier[type]] || ex:Object]]',
        'ex:Assignment[pr:Identifier[t] = ex:Member[ex:Identifier[types] >>> ex:Identifier[length]]]',
        'ex:Assignment[pr:Identifier[tmp] = ex:Logical[ex:Call[ex:Member[ex:Identifier[rtypenamespace] >>> ex:Identifier[exec]](ex:Member[ex:Identifier[types] >c> ex:Identifier[t]])] || ex:Array]]',
        'ex:Assignment[pr:Identifier[type] = ex:Assignment[pr:Identifier[origType] = ex:Member[ex:Identifier[tmp] >c> lt:Numeric]]]',
        'ex:Assignment[pr:Identifier[type] = ex:Logical[ex:Conditional[ex:Identifier[selector] ? ex:Member[ex:Identifier[special] >>> ex:Identifier[delegateType]] : ex:Member[ex:Identifier[special] >>> ex:Identifier[bindType]]] || ex:Identifier[type]]]',
        'ex:Assignment[pr:Identifier[types] = ex:Logical[ex:Call[ex:Member[ex:Logical[ex:Identifier[types] || lt:String] >>> ex:Identifier[match]](ex:Identifier[rnotwhite])] || ex:Array[lt:String]]]',
        'ex:Assignment[pr:Member[ex:Identifier[handler] >>> ex:Identifier[guid]] = ex:Update[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[guid]]++]]',
        'ex:Assignment[pr:Member[ex:Identifier[handlers] >>> ex:Identifier[delegateCount]] = lt:Numeric]',
        'ex:Assignment[pr:Member[ex:Member[ex:Identifier[handleObj] >>> ex:Identifier[handler]] >>> ex:Identifier[guid]] = ex:Member[ex:Identifier[handler] >>> ex:Identifier[guid]]]',
        'ex:Assignment[pr:Member[ex:Member[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[event]] >>> ex:Identifier[global]] >c> ex:Identifier[type]] = lt:Boolean]',
        'ex:Call[ex:Member[ex:Identifier[elem] >>> ex:Identifier[addEventListener]](ex:Identifier[type], ex:Identifier[eventHandle])]',
        'ex:Call[ex:Member[ex:Identifier[handlers] >>> ex:Identifier[push]](ex:Identifier[handleObj])]',
        'ex:Call[ex:Member[ex:Identifier[handlers] >>> ex:Identifier[splice]](ex:Update[ex:Member[ex:Identifier[handlers] >>> ex:Identifier[delegateCount]]++], lt:Numeric, ex:Identifier[handleObj])]',
        'ex:Call[ex:Member[ex:Member[ex:Identifier[special] >>> ex:Identifier[add]] >>> ex:Identifier[call]](ex:Identifier[elem], ex:Identifier[handleObj])]',
        'pr:Identifier[data]',
        'pr:Identifier[elem]',
        'pr:Identifier[handler]',
        'pr:Identifier[selector]',
        'pr:Identifier[types]',
        'st:Continue',
        'st:Else',
        'st:If[ex:Identifier[selector]]',
        'st:If[ex:Logical[ex:Unary[! ex:Member[ex:Identifier[special] >>> ex:Identifier[setup]]] || ex:Binary[ex:Call[ex:Member[ex:Member[ex:Identifier[special] >>> ex:Identifier[setup]] >>> ex:Identifier[call]](ex:Identifier[elem], ex:Identifier[data], ex:Identifier[namespaces], ex:Identifier[eventHandle])] === lt:Boolean]]]',
        'st:If[ex:Member[ex:Identifier[elem] >>> ex:Identifier[addEventListener]]]',
        'st:If[ex:Member[ex:Identifier[handler] >>> ex:Identifier[handler]]]',
        'st:If[ex:Member[ex:Identifier[special] >>> ex:Identifier[add]]]',
        'st:If[ex:Unary[! ex:Assignment[pr:Identifier[eventHandle] = ex:Member[ex:Identifier[elemData] >>> ex:Identifier[handle]]]]]',
        'st:If[ex:Unary[! ex:Assignment[pr:Identifier[events] = ex:Member[ex:Identifier[elemData] >>> ex:Identifier[events]]]]]',
        'st:If[ex:Unary[! ex:Assignment[pr:Identifier[handlers] = ex:Member[ex:Identifier[events] >c> ex:Identifier[type]]]]]',
        'st:If[ex:Unary[! ex:Identifier[elemData]]]',
        'st:If[ex:Unary[! ex:Identifier[type]]]',
        'st:If[ex:Unary[! ex:Member[ex:Identifier[handler] >>> ex:Identifier[guid]]]]',
        'st:If[ex:Unary[! ex:Member[ex:Member[ex:Identifier[handleObj] >>> ex:Identifier[handler]] >>> ex:Identifier[guid]]]]',
        'st:Return',
        'st:While[ex:Update[ex:Identifier[t]--]]',
      ],
    },

    matchedFns: [
      {
        name: 'jquery',
        version: '2.2.2',
        file: '0000.json',
        index: 207,
        targetVersion: true,
        loc: { start: { line: 4515, column: 6 }, end: { line: 4621, column: 2 } },
      },
    ],
    misMatchedFns: [
      { name: 'jquery', version: '1.12.0', file: '0000.json', index: 222, reason: r.mod },
    ],
  },

  /* 3rd group */
  {
    comments: ['underscore@1.7.0'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 6024,
      type: 'fn',
      name: '[anonymous]:>>:debounce:>>:later',
      loc: { start: { line: 29125, column: 16 }, end: { line: 29137, column: 5 } },
      fnStatementTypes: ['t_st:IfStatement', 't_st:VariableDeclaration'],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[last] = ex:Binary[ex:Call[ex:Member[ex:Identifier[_] >>> ex:Identifier[now]]()] - ex:Identifier[timestamp]]]',
        'ex:Assignment[pr:Identifier[context] = ex:Assignment[pr:Identifier[args] = lt:Null]]',
        'ex:Assignment[pr:Identifier[result] = ex:Call[ex:Member[ex:Identifier[func] >>> ex:Identifier[apply]](ex:Identifier[context], ex:Identifier[args])]]',
        'ex:Assignment[pr:Identifier[timeout] = ex:Call[ex:Identifier[setTimeout](ex:Identifier[later], ex:Binary[ex:Identifier[wait] - ex:Identifier[last]])]]',
        'ex:Assignment[pr:Identifier[timeout] = lt:Null]',
        'st:Else',
        'st:If[ex:Logical[ex:Binary[ex:Identifier[last] < ex:Identifier[wait]] && ex:Binary[ex:Identifier[last] > lt:Numeric]]]',
        'st:If[ex:Unary[! ex:Identifier[immediate]]]',
        'st:If[ex:Unary[! ex:Identifier[timeout]]]',
      ],
    },

    matchedFns: [
      {
        name: 'underscore',
        version: '1.7.0',
        file: '0000.json',
        index: 43,
        targetVersion: true,
        loc: { start: { line: 761, column: 16 }, end: { line: 773, column: 5 } },
      },
    ],
    misMatchedFns: [
      { name: 'underscore', version: '1.6.0', file: '0000.json', index: 40, reason: r.mod },
    ],
  },
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.p',
      app: 'com.paynopain.easyGOband-18-2017_04_04.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 1472,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]:>>:parseOptionsExpression:>>:[anonymous]',
      loc: { start: { line: 39348, column: 38 }, end: { line: 39378, column: 7 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_st:ExpressionStatement',
        't_st:ForStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[disableWhen] = ex:Call[ex:Identifier[disableWhenFn](ex:Identifier[scope], ex:Identifier[locals])]]',
        'de:Variable[pr:Identifier[index] = lt:Numeric]',
        'de:Variable[pr:Identifier[key] = ex:Conditional[ex:Binary[ex:Identifier[optionValues] === ex:Identifier[optionValuesKeys]] ? ex:Identifier[index] : ex:Member[ex:Identifier[optionValuesKeys] >c> ex:Identifier[index]]]]',
        'de:Variable[pr:Identifier[label] = ex:Call[ex:Identifier[displayFn](ex:Identifier[scope], ex:Identifier[locals])]]',
        'de:Variable[pr:Identifier[locals] = ex:Call[ex:Identifier[getLocals](ex:Member[ex:Identifier[optionValues] >c> ex:Identifier[key]], ex:Identifier[key])]]',
        'de:Variable[pr:Identifier[optionValuesKeys] = ex:Call[ex:Identifier[getOptionValuesKeys](ex:Identifier[optionValues])]]',
        'de:Variable[pr:Identifier[optionValuesLength] = ex:Member[ex:Identifier[optionValuesKeys] >>> ex:Identifier[length]]]',
        'de:Variable[pr:Identifier[selectValue] = ex:Call[ex:Identifier[getTrackByValueFn](ex:Member[ex:Identifier[optionValues] >c> ex:Identifier[key]], ex:Identifier[locals])]]',
        'de:Variable[pr:Identifier[value] = ex:Member[ex:Identifier[optionValues] >c> ex:Identifier[key]]]',
        'de:Variable[pr:Identifier[watchedArray] = ex:Array]',
        'ex:Assignment[pr:Identifier[optionValues] = ex:Logical[ex:Identifier[optionValues] || ex:Array]]',
        'ex:Binary[ex:Identifier[index] < ex:Identifier[optionValuesLength]]',
        'ex:Call[ex:Member[ex:Identifier[watchedArray] >>> ex:Identifier[push]](ex:Identifier[disableWhen])]',
        'ex:Call[ex:Member[ex:Identifier[watchedArray] >>> ex:Identifier[push]](ex:Identifier[label])]',
        'ex:Call[ex:Member[ex:Identifier[watchedArray] >>> ex:Identifier[push]](ex:Identifier[selectValue])]',
        'ex:Update[ex:Identifier[index]++]',
        'pr:Identifier[optionValues]',
        'st:For',
        'st:If[ex:Logical[ex:Member[ex:Identifier[match] >c> lt:Numeric] || ex:Member[ex:Identifier[match] >c> lt:Numeric]]]',
        'st:If[ex:Member[ex:Identifier[match] >c> lt:Numeric]]',
        'st:Return[ex:Identifier[watchedArray]]',
      ],
    },

    matchedFns: [
      {
        name: 'angular',
        version: '1.4.3',
        file: '0000.json',
        index: 201,
        targetVersion: true,
        loc: { start: { line: 26036, column: 38 }, end: { line: 26066, column: 7 } },
      },
    ],
    misMatchedFns: [
      { name: 'angular', version: '1.6.10', file: '0000.json', index: 178, reason: r.mod },
    ],
  },

  /* 4th group */
  /* 5th group */
  /* 6th group */
  /* 7th group */
  /* 8th group */
  /* 9th group */
  /* 10th group */
  /* 11th group */
]

export const noMisMatched: AppFunction[] = [
  /* 1st group */
  {
    comments: ['angular@1.4.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-com.t',
      app: 'com.tiny.m91392d54e89b48a6b2ecf1306f88ebbb-300000016-2017_02_17.apk',
    },
    file: { path: 'body/0000', location: 'body', id: '0000' },
    signature: {
      index: 6930,
      type: 'fn',
      name: '[anonymous]:>>:qFactory:>>:makePromise',
      loc: { start: { line: 14701, column: 20 }, end: { line: 14709, column: 3 } },
      fnStatementTypes: [
        't_pr:Identifier',
        't_pr:Identifier',
        't_st:IfStatement',
        't_st:ReturnStatement',
        't_st:VariableDeclaration',
      ],
      fnStatementTokens: [
        'de:Variable[pr:Identifier[result] = ex:New[ex:Identifier[Deferred]()]]',
        'ex:Call[ex:Member[ex:Identifier[result] >>> ex:Identifier[reject]](ex:Identifier[value])]',
        'ex:Call[ex:Member[ex:Identifier[result] >>> ex:Identifier[resolve]](ex:Identifier[value])]',
        'pr:Identifier[resolved]',
        'pr:Identifier[value]',
        'st:Else',
        'st:If[ex:Identifier[resolved]]',
        'st:Return[ex:Member[ex:Identifier[result] >>> ex:Identifier[promise]]]',
      ],
    },

    matchedFns: [
      { name: 'angular', version: '1.3.0', file: '0000.json', index: 1049 },
      { name: 'angular', version: '1.3.20', file: '0000.json', index: 1076 },
      { name: 'angular', version: '1.4.0', file: '0000.json', index: 1169 },
      { name: 'angular', version: '1.4.2', file: '0000.json', index: 1172 },
      { name: 'angular', version: '1.4.3', file: '0000.json', index: 1172, targetVersion: true },
      { name: 'angular', version: '1.4.4', file: '0000.json', index: 1192 },
      { name: 'angular', version: '1.4.5', file: '0000.json', index: 1189 },
      { name: 'angular', version: '1.5.0', file: '0000.json', index: 1257 },
      { name: 'angular', version: '1.5.1', file: '0000.json', index: 1260 },
      { name: 'angular', version: '1.5.5', file: '0000.json', index: 1280 },
      { name: 'angular', version: '1.5.9', file: '0000.json', index: 1303 },
    ],
    misMatchedFns: [
      { name: 'angular', version: '1.2.32', file: '0000.json', reason: r.not },
      { name: 'angular', version: '1.5.10', file: '0000.json', reason: r.gone },
      { name: 'angular', version: '1.5.11', file: '0000.json', reason: r.gone },
    ],
  },

  /* 2nd group */
  {
    comments: ['jquery@2.1.1', 'or in sizzle'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'io.shirkan.RavKav-1800000-2017_01_29.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 301,
      type: 'fn',
      name: '[anonymous]:>>:defaultPrefilter:>>:fire',
      loc: { start: { line: 6350, column: 22 }, end: { line: 6354, column: 4 } },
      fnStatementTypes: ['t_st:IfStatement'],
      fnStatementTokens: [
        'ex:Call[ex:Identifier[oldfire]()]',
        'st:If[ex:Unary[! ex:Member[ex:Identifier[hooks] >>> ex:Identifier[unqueued]]]]',
      ],
    },

    matchedFns: [
      { name: 'jquery', version: '1.8.2', file: '0000.json', index: 300 },
      { name: 'jquery', version: '1.8.3', file: '0000.json', index: 300 },
      { name: 'jquery', version: '1.11.0', file: '0000.json', index: 321 },
      {
        name: 'jquery',
        version: '2.1.1',
        file: '0000.json',
        index: 301,
        targetVersion: true,
        loc: { start: { line: 6350, column: 22 }, end: { line: 6354, column: 4 } },
      },
      { name: 'jquery', version: '2.1.2', file: '0000.json', index: 299 },
      { name: 'jquery', version: '2.2.0', file: '0000.json', index: 308 },
      { name: 'jquery', version: '3.0.0', file: '0000.json', index: 313 },
      { name: 'jquery', version: '3.3.1', file: '0000.json', index: 317 },
    ],
    misMatchedFns: [
      { name: 'jquery', version: '1.5.1', file: '0000.json', reason: r.not },
      { name: 'jquery', version: '1.7.3', file: '0000.json', reason: r.not },
    ],
  },

  /* 3rd group */
  {
    comments: ['jquery@2.1.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'io.shirkan.RavKav-1800000-2017_01_29.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 38,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]',
      loc: { start: { line: 27, column: 3 }, end: { line: 32, column: 4 } },
      fnStatementTypes: ['t_pr:Identifier', 't_st:IfStatement', 't_st:ReturnStatement'],
      fnStatementTokens: [
        'pr:Identifier[w]',
        'st:If[ex:Unary[! ex:Member[ex:Identifier[w] >>> ex:Identifier[document]]]]',
        'st:Return[ex:Call[ex:Identifier[factory](ex:Identifier[w])]]',
        'st:Throw[ex:New[ex:Identifier[Error](lt:String)]]',
      ],
    },

    matchedFns: [
      { name: 'jquery', version: '1.11.0', file: '0000.json', index: 50 },
      { name: 'jquery', version: '1.12.4', file: '0000.json', index: 49 },
      { name: 'jquery', version: '2.1.0', file: '0000.json', index: 38 },
      {
        name: 'jquery',
        version: '2.1.1',
        file: '0000.json',
        index: 38,
        targetVersion: true,
        loc: { start: { line: 27, column: 3 }, end: { line: 32, column: 4 } },
      },
      { name: 'jquery', version: '3.3.1', file: '0000.json', index: 39 },
    ],
    misMatchedFns: [
      { name: 'jquery', version: '1.7.2', file: '0000.json', reason: r.not },
      { name: 'jquery', version: '1.7.3', file: '0000.json', reason: r.not },
      { name: 'jquery', version: '1.8.3', file: '0000.json', reason: r.not },
      { name: 'jquery', version: '1.9.1', file: '0000.json', reason: r.not },
    ],
  },
  {
    comments: ['angular@1.5.3'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-a_b',
      app: 'br.com.williarts.radiovox-20008-2017_01_25.apk',
    },
    file: { path: 'head/0001', location: 'head', id: '0001' },
    signature: {
      index: 2549,
      type: 'fn',
      name: '[anonymous]:>>:$WindowProvider',
      loc: { start: { line: 32504, column: 0 }, end: { line: 32506, column: 1 } },
      fnStatementTypes: ['t_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Member[ex:This >>> ex:Identifier[$get]] = ex:Call[ex:Identifier[valueFn](ex:Identifier[window])]]',
      ],
    },

    matchedFns: [
      { name: 'angular', version: '1.2.27', file: '0000.json', index: 445 },
      { name: 'angular', version: '1.3.0', file: '0000.json', index: 569 },
      { name: 'angular', version: '1.4.0', file: '0000.json', index: 606 },
      { name: 'angular', version: '1.5.0', file: '0000.json', index: 669 },
      {
        name: 'angular',
        version: '1.5.3',
        file: '0000.json',
        index: 678,
        targetVersion: true,
        loc: { start: { line: 19134, column: 0 }, end: { line: 19136, column: 1 } },
      },
      { name: 'angular', version: '1.6.0', file: '0000.json', index: 728 },
      { name: 'angular', version: '1.7.0-rc.0', file: '0000.json', index: 744 },
    ],
    misMatchedFns: [],
  },
  {
    comments: ['jquery@2.1.1'],
    app: {
      type: 'cordova' as APP_TYPES.cordova,
      section: '20170726-d-z',
      app: 'io.shirkan.RavKav-1800000-2017_01_29.apk',
    },
    file: { path: 'head/0000', location: 'head', id: '0000' },
    signature: {
      index: 9,
      type: 'fn',
      name: '[anonymous]:>>:[anonymous]',
      loc: { start: { line: 4724, column: 3 }, end: { line: 4745, column: 1 } },
      fnStatementTypes: ['t_pr:Identifier', 't_pr:Identifier', 't_st:ExpressionStatement'],
      fnStatementTokens: [
        'ex:Assignment[pr:Member[ex:Member[ex:Member[ex:Identifier[jQuery] >>> ex:Identifier[event]] >>> ex:Identifier[special]] >c> ex:Identifier[orig]] = ex:Object[ex:Identifier[delegateType] : ex:Identifier[fix], ex:Identifier[bindType] : ex:Identifier[fix], ex:Identifier[handle] : ex:Function[anonymous]]]',
        'pr:Identifier[fix]',
        'pr:Identifier[orig]',
      ],
    },

    matchedFns: [
      { name: 'jquery', version: '1.7.2', file: '0000.json', index: 18 },
      { name: 'jquery', version: '1.7.3', file: '0000.json', index: 18 },
      { name: 'jquery', version: '1.8.3', file: '0000.json', index: 13 },
      { name: 'jquery', version: '1.11.0', file: '0000.json', index: 19 },
      {
        name: 'jquery',
        version: '2.1.1',
        file: '0000.json',
        index: 9,
        targetVersion: true,
        loc: { start: { line: 4724, column: 3 }, end: { line: 4745, column: 1 } },
      },
      { name: 'jquery', version: '3.0.0', file: '0000.json', index: 32 },
      { name: 'jquery', version: '3.3.0', file: '0000.json', index: 35 },
      { name: 'jquery', version: '3.3.1', file: '0000.json', index: 35 },
    ],
    misMatchedFns: [],
  },

  /* 4th group */
  /* 5th group */
  /* 6th group */
  /* 7th group */
  /* 8th group */
  /* 9th group */
  /* 10th group */
  /* 11th group */
]
